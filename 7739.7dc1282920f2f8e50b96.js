"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7739],{7739:function(n,s,a){a.r(s),s.default='<h2 id="multiple-file-types-per-entry">Multiple file types per entry<a href="#multiple-file-types-per-entry" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>JavaScript의 스타일에 <code>import</code>를 사용하지 않는 애플리케이션(싱글 페이지 애플리케이션 혹은 다른 이유로인해)에서 CSS 및 JavaScript와 기타 파일에 대해 각각 별도의 번들을 얻기 위해 <a href="/configuration/entry-context/#entry">엔트리에</a> 값 배열을 사용하여 다른 유형의 파일을 제공할 수 있습니다.</p> <p>예를 들어 보겠습니다. 홈과 계정을 위한 두 가지 페이지 유형이 있는 PHP 애플리케이션이 있습니다. 홈 페이지는 다른 레이아웃을 갖고 있고, 나머지 애플리케이션(계정 페이지)과는 공유할 수 없는 JavaScript가 있습니다. 홈 페이지를 위해 애플리케이션 파일에서 <code>home.js</code>와 <code>home.css</code>를 출력하고, 계정 페이지를 위해 <code>account.js</code>와 <code>account.css</code>를 출력하려고 합니다.</p> <p><strong>home.js</strong></p> <pre><code class="hljs language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'home page type\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>home.scss</strong></p> <pre><code class="hljs language-scss"><span class="token comment">// 홈 페이지의 개별 스타일</span></code></pre> <p><strong>account.js</strong></p> <pre><code class="hljs language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'account page type\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p><strong>account.scss</strong></p> <pre><code class="hljs language-scss"><span class="token comment">// 계정 페이지의 개별 스타일</span></code></pre> <p>CSS를 위한 <code>프로덕션</code> 모드에서 <a href="/plugins/mini-css-extract-plugin/"><code>MiniCssExtractPlugin</code></a>을 모범사례로 사용하겠습니다.</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'mini-css-extract-plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  mode<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span><span class="token punctuation">,</span>\n  entry<span class="token operator">:</span> <span class="token punctuation">{</span>\n    home<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./home.js\'</span><span class="token punctuation">,</span> <span class="token string">\'./home.scss\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    account<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./account.js\'</span><span class="token punctuation">,</span> <span class="token string">\'./account.scss\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">\'[name].js\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.scss$/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token comment">// 개발환경에서는 style-loader로 대체 합니다</span>\n          process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">\'production\'</span>\n            <span class="token operator">?</span> <span class="token string">\'style-loader\'</span>\n            <span class="token operator">:</span> MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'sass-loader\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      filename<span class="token operator">:</span> <span class="token string">\'[name].css\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>위의 구성으로 webpack을 실행하면 다른 출력경로를 지정하지 않았기 때문에 <code>./dist</code>로 출력됩니다. <code>./dist</code> 디렉터리는 이제 4개의 파일이 포함됩니다.</p> <ul> <li>home.js</li> <li>home.css</li> <li>account.js</li> <li>account.css</li> </ul> '}}]);