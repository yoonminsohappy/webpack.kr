"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8624],{8624:function(e,a,t){t.r(a),t(7378);var n=t(2682);function p(){return(p=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function o({components:e,...a}){return(0,n.kt)("wrapper",p({components:e},a),(0,n.kt)("p",null,"webpack의 버전4 부터는 선택된 ",(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"모드")),"에 따라 최적화를 실행하기 때문에, 여전히 모든 최적화는 수동 구성 및 재정의에 사용할 수 있습니다."),(0,n.kt)("h2",{id:"optimizationminimize"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.minimize"),(0,n.kt)("a",{href:"#optimizationminimize","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,n.kt)("p",null,(0,n.kt)("a",{href:"/plugins/terser-webpack-plugin/",parentName:"p"},"TerserPlugin")," 또는 ",(0,n.kt)("a",{href:"#optimizationminimizer",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"optimization.minimizer")),"에 지정된 플러그인을 사용하여 번들을 최소화합니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    minimize",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},"mode"),"가 어떻게 동작하는지 알아보세요.")),(0,n.kt)("h2",{id:"optimizationminimizer"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.minimizer"),(0,n.kt)("a",{href:"#optimizationminimizer","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"[TerserPlugin]")," 및 또는",(0,n.kt)("inlineCode",{parentName:"p"},"[function (compiler)]")),(0,n.kt)("p",null,"하나 이상의 다른 ",(0,n.kt)("a",{href:"/plugins/terser-webpack-plugin/",parentName:"p"},"TerserPlugin")," 인스턴스를 제공하여 기본 최소화 도구를 다시 설정할 수 있습니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," TerserPlugin ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'terser-webpack-plugin'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\nmodule",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    minimizer",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"TerserPlugin"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        parallel",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n        sourceMap",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// 프로덕션에서 소스 맵을 사용하는 경우 true로 설정해야 합니다."),"\n        terserOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// https://github.com/webpack-contrib/terser-webpack-plugin#terseroptions"),"\n        ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n      ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"또는 함수로 제공할 수 있습니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    minimizer",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n      ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token parameter",parentName:"code"},"compiler"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n        ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," TerserPlugin ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'terser-webpack-plugin'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n        ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"TerserPlugin"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n          ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"/* your config */"),"\n        ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,n.kt)("span",{className:"token function",parentName:"code"},"apply"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),"compiler",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n      ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"optimization.minimizer"),"에서 ",(0,n.kt)("inlineCode",{parentName:"p"},"'...'"),"를 사용하여 기본값에 접근할 수 있습니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    minimizer",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"CssMinimizer"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'...'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationsplitchunks"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.splitChunks"),(0,n.kt)("a",{href:"#optimizationsplitchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"object")),(0,n.kt)("p",null,"webpack v4+에서는 동적으로 가져온 모듈에 새로운 공통 청크 전략을 바로 사용할 수 있습니다. ",(0,n.kt)("a",{href:"/plugins/split-chunks-plugin/",parentName:"p"},"SplitChunksPlugin")," 페이지에서 이 동작을 설정할 때 사용 가능한 옵션을 확인해보세요."),(0,n.kt)("h2",{id:"optimizationruntimechunk"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.runtimeChunk"),(0,n.kt)("a",{href:"#optimizationruntimechunk","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"object")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ",(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"optimization.runtimeChunk"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," 또는 ",(0,n.kt)("inlineCode",{parentName:"p"},"'multiple'"),"로 설정하면 런타임만 포함된 추가 청크가 각 엔트리 포인트에 추가됩니다. 이 설정은 다음에 대한 별칭입니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    runtimeChunk",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,n.kt)("span",{className:"token function-variable function",parentName:"code"},"name"),(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token parameter",parentName:"code"},"entrypoint"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,n.kt)("span",{className:"token template-string",parentName:"code"},(0,n.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,n.kt)("span",{className:"token string",parentName:"span"},"runtime~"),(0,n.kt)("span",{className:"token interpolation",parentName:"span"},(0,n.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"entrypoint",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"name",(0,n.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,n.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"이 대신 ",(0,n.kt)("inlineCode",{parentName:"p"},"'single'"),"값을 설정하면 생성된 모든 청크에서 공유할 런타임 파일을 생성합니다. 이 설정은 다음에 대한 별칭입니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    runtimeChunk",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      name",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'runtime'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"optimization.runtimeChunk"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"object"),"로 설정하면 런타임 청크의 이름 또는 이름 팩토리를 나타내는 ",(0,n.kt)("inlineCode",{parentName:"p"},"name")," 속성만 제공 할 수 있습니다."),(0,n.kt)("p",null,"기본값은 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"입니다. 각 엔트리 청크에는 런타임이 포함됩니다."),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,n.kt)("p",{parentName:"aside"},"import된 모듈은 각 런타임 청크에서 개별적으로 초기화되므로, 페이지에 복수의 엔트리 포인트를 포함하는 경우 이 동작에 주의해야 합니다. 값을 ",(0,n.kt)("inlineCode",{parentName:"p"},"single"),"로 설정하거나 하나의 런타임 인스턴스만 허용하는 다른 설정을 사용할 수 있습니다.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    runtimeChunk",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      ",(0,n.kt)("span",{className:"token function-variable function",parentName:"code"},"name"),(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token parameter",parentName:"code"},"entrypoint"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")")," ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=>")," ",(0,n.kt)("span",{className:"token template-string",parentName:"code"},(0,n.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`"),(0,n.kt)("span",{className:"token string",parentName:"span"},"runtimechunk~"),(0,n.kt)("span",{className:"token interpolation",parentName:"span"},(0,n.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"${"),"entrypoint",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"name",(0,n.kt)("span",{className:"token interpolation-punctuation punctuation",parentName:"span"},"}")),(0,n.kt)("span",{className:"token template-punctuation string",parentName:"span"},"`")),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationemitonerrors"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.emitOnErrors"),(0,n.kt)("a",{href:"#optimizationemitonerrors","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = false")),(0,n.kt)("p",null,"컴파일 중 오류가 발생할 때마다 애셋을 내보내려면 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.emitOnErrors"),"를 사용하세요. 이렇게 하면 오류가 있는 애셋이 방출됩니다. 심각한 오류는 생성된 코드로 내보내지고 런타임에 오류를 발생시킵니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    emitOnErrors",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,n.kt)("p",{parentName:"aside"},"webpack ",(0,n.kt)("a",{href:"/api/cli/",parentName:"p"},"CLI"),'를 사용한다면, 이 플러그인이 활성화되어있는 동안 webpack 프로세스가 오류 코드와 함께 종료되지 않습니다. CLI를 사용할 때 webpack이 "실패"하게 하려면 ',(0,n.kt)("a",{href:"/api/cli/#advanced-options",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"bail")," 옵션"),"을 확인하세요.")),(0,n.kt)("h2",{id:"optimizationmoduleids"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.moduleIds"),(0,n.kt)("a",{href:"#optimizationmoduleids","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean: false")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string: 'natural' | 'named' | 'deterministic' | 'size'")),(0,n.kt)("p",null,"모듈 ID를 선택할 때 사용할 알고리즘을 결정합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.moduleIds"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하면, 플러그인을 통해 사용자 정의 알고리즘이 제공될 수 있으므로 내장 알고리즘을 사용해서는 안 된다고 webpack에 알립니다."),(0,n.kt)("p",null,"다음 문자열 값이 지원됩니다."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr"},"옵션"),(0,n.kt)("th",{parentName:"tr"},"설명"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"natural"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"사용 순서에 따른 숫자 ID입니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"named"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"디버깅을 위한 식별 가능한 ID입니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"deterministic"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"모듈 이름을 작은 숫자 값으로 해시합니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"size"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"최소 초기 다운로드 크기에 초점을 맞춘 숫자 ID입니다."))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    moduleIds",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'deterministic'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"deterministic")," 옵션은 장기 캐싱에 유용하지만 ",(0,n.kt)("inlineCode",{parentName:"p"},"hashed")," 옵션에 비해 더 작은 번들을 생성합니다. 숫자 값의 길이는 ID 스페이스의 최대 80%를 채우게 됩니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.moduleIds"),"가 ",(0,n.kt)("inlineCode",{parentName:"p"},"deterministic"),"으로 설정된 경우 기본적으로 최소 3자리 숫자가 사용됩니다. 기본 동작을 오버라이드하려면 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.moduleIds"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하고 ",(0,n.kt)("inlineCode",{parentName:"p"},"webpack.ids.DeterministicModuleIdsPlugin"),"을 사용하세요."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    moduleIds",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  plugins",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n    ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"ids",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"DeterministicModuleIdsPlugin"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      maxLength",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"5"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("inlineCode",{parentName:"p"},"moduleIds: 'deterministic'"),"은 webpack 5에 추가되었으며, 이로 인해 ",(0,n.kt)("inlineCode",{parentName:"p"},"moduleIds: 'hashed'"),"는 더 이상 사용되지 않습니다.")),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("inlineCode",{parentName:"p"},"moduleIds: total-size"),"는 webpack 5에서 제거되었습니다.")),(0,n.kt)("h2",{id:"optimizationchunkids"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.chunkIds"),(0,n.kt)("a",{href:"#optimizationchunkids","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = false")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string: 'natural' | 'named' | 'size' | 'total-size' | 'deterministic'")),(0,n.kt)("p",null,"청크 ID를 선택할 때 사용할 알고리즘을 결정합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.chunkIds"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하면, 플러그인을 통해 사용자 정의 알고리즘이 제공될 수 있으므로 내장 알고리즘을 사용해서는 안 된다고 webpack에 알립니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.chunkIds"),"에 대한 몇 가지 기본값이 있습니다."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"또한 개발 환경인 경우 ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.chunkIds"),"는",(0,n.kt)("inlineCode",{parentName:"li"}," 'named'"),"로 설정되고 프로덕션 환경에서는 ",(0,n.kt)("inlineCode",{parentName:"li"},"'deterministic'"),"으로 설정됩니다."),(0,n.kt)("li",{parentName:"ul"},"위의 어느 것도 해당하지 않으면 ",(0,n.kt)("inlineCode",{parentName:"li"},"optimization.chunkIds"),"는 ",(0,n.kt)("inlineCode",{parentName:"li"},"'natural'"),"로 기본 설정됩니다.")),(0,n.kt)("p",null,"다음 문자열 값이 지원됩니다."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr"},"옵션"),(0,n.kt)("th",{parentName:"tr"},"설명"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'natural'"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"사용 순서에 따른 숫자 ID입니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'named'"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"디버깅을 위한 식별 가능한 ID입니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'deterministic'"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"컴파일 간에 변경되지 않는 짧은 숫자 ID입니다. 장기 캐싱에 유용합니다. 프로덕션 모드에서 기본으로 활성화됩니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'size'"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"최소 초기 다운로드 크기에 초점을 맞춘 숫자 ID입니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'total-size'"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"최소 전체 다운로드 크기에 초점을 맞춘 숫자 ID입니다."))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    chunkIds",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'named'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"기본적으로 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.chunkIds"),"가",(0,n.kt)("inlineCode",{parentName:"p"}," 'deterministic'"),"으로 설정된 경우 최소 3자리 숫자가 사용됩니다. 기본 동작을 오버라이드하려면 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.chunkIds"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하고 ",(0,n.kt)("inlineCode",{parentName:"p"},"webpack.ids.DeterministicChunkIdsPlugin"),"을 사용하세요."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    chunkIds",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  plugins",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"\n    ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"new")," ",(0,n.kt)("span",{className:"token class-name",parentName:"code"},"webpack",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"ids",(0,n.kt)("span",{className:"token punctuation",parentName:"span"},"."),"DeterministicChunkIdsPlugin"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n      maxLength",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"5"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationnodeenv"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.nodeEnv"),(0,n.kt)("a",{href:"#optimizationnodeenv","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = false")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"webpack이 ",(0,n.kt)("inlineCode",{parentName:"p"},"process.env.NODE_ENV"),"를 주어진 문자열 값으로 설정하도록 합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.nodeEnv"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하지 않는 한 ",(0,n.kt)("a",{href:"/plugins/define-plugin/",parentName:"p"},"DefinePlugin"),"을 사용합니다. 만약 ",(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},"mode"),"가 설정되었다면 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.nodeEnv"),"는 그 값을 ",(0,n.kt)("strong",{parentName:"p"},"기본으로 사용하고"),", 그렇지 않으면 ",(0,n.kt)("inlineCode",{parentName:"p"},"'production'"),"으로 폴백합니다."),(0,n.kt)("p",null,"사용 가능한 값은 아래와 같습니다."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"모든 문자열: ",(0,n.kt)("inlineCode",{parentName:"li"},"process.env.NODE_ENV"),"를 설정하는 값입니다."),(0,n.kt)("li",{parentName:"ul"},"false: ",(0,n.kt)("inlineCode",{parentName:"li"},"process.env.NODE_ENV"),"값을 수정하거나 설정하지 않습니다.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    nodeEnv",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'production'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},"mode"),"가 ",(0,n.kt)("inlineCode",{parentName:"p"},"'none'"),"일 때는 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.nodeEnv"),"는 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"가 됩니다.")),(0,n.kt)("h2",{id:"optimizationmanglewasmimports"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.mangleWasmImports"),(0,n.kt)("a",{href:"#optimizationmanglewasmimports","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = false")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true"),"로 설정하면 import를 짧은 문자열로 변경하여 WASM 크기를 줄입니다. 모듈 및 export 이름이 맹글됩니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    mangleWasmImports",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationremoveavailablemodules"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.removeAvailableModules"),(0,n.kt)("a",{href:"#optimizationremoveavailablemodules","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = false")),(0,n.kt)("p",null,"모듈이 이미 모든 상위에 포함되어있는 경우 청크에서 해당 모듈을 감지하고 제거합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.removeAvailableModules"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),"로 설정하면 이 최적화가 활성화됩니다. ",(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"production")," mode"),"에서 기본적으로 사용됩니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    removeAvailableModules",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"warning"},(0,n.kt)("h6",{className:"warning__prefix",parentName:"aside"},"warning"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("inlineCode",{parentName:"p"},"optimization.removeAvailableModules"),"는 webpack의 성능을 저하시키며 다음 메이저 릴리스의 ",(0,n.kt)("inlineCode",{parentName:"p"},"production")," 모드에서 기본적으로 비활성화됩니다. 추가 빌드 성능 향상을 원한다면 ",(0,n.kt)("inlineCode",{parentName:"p"},"production"),"모드에서 이 옵션을 비활성화하세요.")),(0,n.kt)("h2",{id:"optimizationremoveemptychunks"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.removeEmptyChunks"),(0,n.kt)("a",{href:"#optimizationremoveemptychunks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,n.kt)("p",null,"빈 청크를 감지하고 제거합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.removeEmptyChunks"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하면 이 최적화가 비활성화됩니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    removeEmptyChunks",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationmergeduplicatechunks"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.mergeDuplicateChunks"),(0,n.kt)("a",{href:"#optimizationmergeduplicatechunks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,n.kt)("p",null,"동일한 모듈을 포함하는 청크를 병합합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.mergeDuplicateChunks"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하면 이 최적화가 비활성화됩니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    mergeDuplicateChunks",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationflagincludedchunks"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.flagIncludedChunks"),(0,n.kt)("a",{href:"#optimizationflagincludedchunks","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"더 큰 청크가 이미 로드된 경우, 다른 청크의 하위집합인 청크를 확인하고 하위집합을 로드하지 않는 방식으로 플래그를 지정합니다. 기본적으로 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.flagIncludedChunks"),"는 ",(0,n.kt)("inlineCode",{parentName:"p"},"production")," ",(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},"mode"),"에서 활성화되고 그 외에는 비활성화됩니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    flagIncludedChunks",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationprovidedexports"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.providedExports"),(0,n.kt)("a",{href:"#optimizationprovidedexports","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"export * from ..."),"에서 보다 효율적인 코드를 생성하기 위해 모듈에서 어떤 export가 제공되는지 파악합니다. 기본적으로 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.providedExports"),"가 활성화됩니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    providedExports",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationusedexports"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.usedExports"),(0,n.kt)("a",{href:"#optimizationusedexports","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = true")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string: 'global'")),(0,n.kt)("p",null,"각 모듈에서 사용된 export를 확인합니다. 이는 ",(0,n.kt)("a",{href:"#optimizationprovidedexports",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"optimization.providedExports")),"에 의존합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.usedExports"),"에 의해 수집된 정보는 다른 최적화 또는 코드 생성에 사용됩니다. 즉, 사용하지 않은 export는 생성되지 않으며, 모든 사용이 호환되는 경우 export 이름이 단일 식별자로 변경됩니다.\n최소화 도구로 데드 코드 제거 시 이로 인해 사용하지 않은 export를 제거 할 수 있습니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    usedExports",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"런타임 당 사용된 export 분석에서 제외하려면 아래와 같이 사용하세요."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    usedExports",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'global'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationconcatenatemodules"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.concatenateModules"),(0,n.kt)("a",{href:"#optimizationconcatenatemodules","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,"단일 모듈로 안전하게 연결할 수 있는 모듈 그래프의 세그먼트를 찾습니다. ",(0,n.kt)("a",{href:"#optimizationprovidedexports",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"optimization.providedExports"))," 및 ",(0,n.kt)("a",{href:"#optimizationusedexports",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"optimization.usedExports")),"에 의존합니다.\n기본적으로 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.concatenateModules"),"는 ",(0,n.kt)("inlineCode",{parentName:"p"},"production")," ",(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},"mode"),"에서 활성화되고 그 외에는 비활성화됩니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    concatenateModules",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationsideeffects"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.sideEffects"),(0,n.kt)("a",{href:"#optimizationsideeffects","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = true")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string: 'flag'")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"package.json"),"의 ",(0,n.kt)("a",{href:"https://github.com/webpack/webpack/blob/master/examples/side-effects/README.md",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"sideEffects"))," 플래그를 인식합니다. 또는 사이드 이펙트 없음으로 플래그 된 모듈은 export가 사용되지 않을 때 건너뛰도록 합니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"package.json")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-json",parentName:"pre"},(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token property",parentName:"code"},'"name"'),(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},'"awesome npm module"'),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token property",parentName:"code"},'"version"'),(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},'"1.0.0"'),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token property",parentName:"code"},'"sideEffects"'),(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"))),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("inlineCode",{parentName:"p"},"sideEffects"),"는 npm 모듈의 ",(0,n.kt)("inlineCode",{parentName:"p"},"package.json")," 파일에 있어야 합니다. 큰 모듈이 요구되므로 작업자의 프로젝트 ",(0,n.kt)("inlineCode",{parentName:"p"},"package.json"),"에서 ",(0,n.kt)("inlineCode",{parentName:"p"},"sideEffects"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하지 않아도 됩니다.")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"optimization.sideEffects"),"는 ",(0,n.kt)("a",{href:"#optimizationprovidedexports",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"optimization.providedExports"))," 활성화에 의존합니다. 이 디펜던시는 빌드 시간 비용이 들지만, 모듈을 제거하면 코드 생성이 적기 때문에 성능에 긍정적인 영향을 미칩니다. 이 최적화의 효과는 코드 베이스에 따라 다르므로 가능한 성능 향상을 위해 시도해보세요."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    sideEffects",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"수동 플래그만 사용하고 소스 코드를 분석하지 않으려면 아래와 같이 사용하세요."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    sideEffects",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'flag'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"'flag'"),"값은 비 프로덕션 빌드에서 기본적으로 사용됩니다."),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,n.kt)("p",{parentName:"aside"},"또한 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.sideEffects"),"는 사이드 이펙트가 없는 구문만 포함된 모듈을 사이드 이펙트 없음으로 플래그합니다.")),(0,n.kt)("h2",{id:"optimizationportablerecords"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.portableRecords"),(0,n.kt)("a",{href:"#optimizationportablerecords","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"optimization.portableRecords"),"는 컨텍스트 폴더를 이동할 수 있도록 상대 경로가 있는 레코드를 생성하도록 합니다."),(0,n.kt)("p",null,"기본적으로 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.portableRecords"),"는 비활성화되어 있습니다. 다음 레코드 옵션중 하나라도 webpack 설정에 제공되면 자동으로 활성화됩니다. ",(0,n.kt)("a",{href:"/configuration/other-options/#recordspath",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"recordsPath")),", ",(0,n.kt)("a",{href:"/configuration/other-options/#recordsinputpath",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"recordsInputPath")),", ",(0,n.kt)("a",{href:"/configuration/other-options/#recordsoutputpath",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"recordsOutputPath")),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    portableRecords",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationmangleexports"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.mangleExports"),(0,n.kt)("a",{href:"#optimizationmangleexports","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string: 'deterministic' | 'size'")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"optimization.mangleExports"),"를 사용하면 export 맹글링을 제어할 수 있습니다."),(0,n.kt)("p",null,"기본적으로 ",(0,n.kt)("inlineCode",{parentName:"p"},"optimization.mangleExports: 'deterministic'"),"은 ",(0,n.kt)("inlineCode",{parentName:"p"},"production")," ",(0,n.kt)("a",{href:"/configuration/mode/",parentName:"p"},"mode"),"에서 활성화되고 그 외에는 비활성화됩니다."),(0,n.kt)("p",null,"다음 값이 지원됩니다."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr"},"옵션"),(0,n.kt)("th",{parentName:"tr"},"설명"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'size'"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"짧은 이름(보통 단일 문자). 최소 다운로드 사이즈에 초점을 맞춥니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'deterministic'"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"짧은 이름(보통 두 개의 문자). export를 추가하거나 제거할 때도 변경되지 않습니다. 장기 캐싱에 유용합니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"true"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"'deterministic'"),"과 동일합니다."))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{"data-th":"옵션",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},(0,n.kt)("inlineCode",{parentName:"span"},"false"))),(0,n.kt)("td",{"data-th":"설명",parentName:"tr"},(0,n.kt)("span",{parentName:"td"},"원래 이름을 유지합니다. 가독성과 디버깅에 유용합니다"))))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    mangleExports",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationinnergraph"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.innerGraph"),(0,n.kt)("a",{href:"#optimizationinnergraph","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"optimization.innerGraph"),"는 사용되지 않은 export에 대해 내부 그래프 분석을 수행할지를 결정합니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    innerGraph",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h2",{id:"optimizationrealcontenthash"},(0,n.kt)("inlineCode",{parentName:"h2"},"optimization.realContentHash"),(0,n.kt)("a",{href:"#optimizationrealcontenthash","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = true")),(0,n.kt)("p",null,"애셋이 처리된 후 올바른 애셋 콘텐츠 해시를 얻기 위해 추가 해시 컴파일 패스를 추가합니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"realContentHash"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"false"),"로 설정하면 내부 데이터를 사용하여 해시를 산출하며 이는 애셋이 동일한 경우 변경될 수 있습니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  optimization",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    realContentHash",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"false"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))))}o.isMDXComponent=!0,a.default=o}}]);