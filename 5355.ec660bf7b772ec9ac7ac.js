(self.webpackChunk=self.webpackChunk||[]).push([[5355],{5355:function(t,a,n){"use strict";n.r(a),a.default='<p>webpack에는 많은 플러그인 인터페이스가 있습니다. webpack 자체에 있는 대부분의 기능은 플러그인 인터페이스를 사용합니다. 이런점이 webpack을 <strong>유연하게</strong> 만듭니다.</p> <table> <thead> <tr> <th>이름</th> <th>설명</th> </tr> </thead> <tbody> <tr> <td data-th="이름"><span><a href="/plugins/banner-plugin"><code>BannerPlugin</code></a></span></td> <td data-th="설명"><span>생성된 청크의 상단에 배너 추가</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/commons-chunk-plugin"><code>CommonsChunkPlugin</code></a></span></td> <td data-th="설명"><span>청크 간에 공유되는 공통 모듈 추출</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/compression-webpack-plugin"><code>CompressionWebpackPlugin</code></a></span></td> <td data-th="설명"><span>Content-Encoding으로 제공할 압축된 버전의 애셋 준비</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/context-replacement-plugin"><code>ContextReplacementPlugin</code></a></span></td> <td data-th="설명"><span><code>require</code> 표현식의 유추된 컨텍스트 재정의</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/copy-webpack-plugin"><code>CopyWebpackPlugin</code></a></span></td> <td data-th="설명"><span>개별 파일 또는 전체 디렉터리를 빌드 디렉터리에 복사</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/define-plugin"><code>DefinePlugin</code></a></span></td> <td data-th="설명"><span>컴파일 타임에 전역 변수 선언</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/dll-plugin"><code>DllPlugin</code></a></span></td> <td data-th="설명"><span>빌드 시간을 단축시키기 위해 번들 분할</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/environment-plugin"><code>EnvironmentPlugin</code></a></span></td> <td data-th="설명"><span><code>process.env</code> 키에서 <a href="/plugins/define-plugin"><code>DefinePlugin</code></a>을 사용하는 약어</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/eslint-webpack-plugin"><code>EslintWebpackPlugin</code></a></span></td> <td data-th="설명"><span>webpack을 위한 ESLint 플러그인</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/hot-module-replacement-plugin"><code>HotModuleReplacementPlugin</code></a></span></td> <td data-th="설명"><span>Hot Module Replacement (HMR) 활성화</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/html-webpack-plugin"><code>HtmlWebpackPlugin</code></a></span></td> <td data-th="설명"><span>번들을 제공하기 위한 HTML 파일을 쉽게 생성</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/ignore-plugin"><code>IgnorePlugin</code></a></span></td> <td data-th="설명"><span>번들에서 특정 모듈 제외</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/limit-chunk-count-plugin"><code>LimitChunkCountPlugin</code></a></span></td> <td data-th="설명"><span>청킹을 더 잘 제어하기 위한 청킹의 최소/최대 제한 설정</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/min-chunk-size-plugin"><code>MinChunkSizePlugin</code></a></span></td> <td data-th="설명"><span>청크 크기를 지정한 제한 이상으로 유지</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/mini-css-extract-plugin"><code>MiniCssExtractPlugin</code></a></span></td> <td data-th="설명"><span>CSS파일을 필요로하는 JS파일만 CSS파일을 생성</span></td> </tr> <tr> <td data-th="이름"><span><a href="/configuration/optimization/#optimizationemitonerrors"><code>NoEmitOnErrorsPlugin</code></a></span></td> <td data-th="설명"><span>컴파일 오류가 있는 경우 방출 단계를 건너뜀</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/normal-module-replacement-plugin"><code>NormalModuleReplacementPlugin</code></a></span></td> <td data-th="설명"><span>정규식과 일치하는 리소스 교체</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/install-webpack-plugin"><code>NpmInstallWebpackPlugin</code></a></span></td> <td data-th="설명"><span>개발단계에서 누락된 디펜던시 자동 설치</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/progress-plugin"><code>ProgressPlugin</code></a></span></td> <td data-th="설명"><span>컴파일 진행률 보고</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/provide-plugin"><code>ProvidePlugin</code></a></span></td> <td data-th="설명"><span>import 또는 require 사용없이 모듈 사용</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/source-map-dev-tool-plugin"><code>SourceMapDevToolPlugin</code></a></span></td> <td data-th="설명"><span>소스맵을 세밀하게 제어</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/eval-source-map-dev-tool-plugin"><code>EvalSourceMapDevToolPlugin</code></a></span></td> <td data-th="설명"><span>eval 소스맵을 세밀하게 제어</span></td> </tr> <tr> <td data-th="이름"><span><a href="/plugins/terser-webpack-plugin/"><code>TerserPlugin</code></a></span></td> <td data-th="설명"><span>Terser를 사용하여 JS 압축</span></td> </tr> </tbody> </table> <p>더 많은 써드 파티 플러그인을 찾고 싶다면, <a href="https://github.com/webpack-contrib/awesome-webpack#webpack-plugins">awesome-webpack</a>을 참고하세요.</p> '}}]);