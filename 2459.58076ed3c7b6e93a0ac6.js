"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2459],{2459:function(e,a,t){t.r(a),t(7378);var n=t(2682);function p(){return(p=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function s({components:e,...a}){return(0,n.kt)("wrapper",p({components:e},a),(0,n.kt)("p",null,"webpack은 파일이 변경될 때마다 이를 감지하여 다시 컴파일 할 수 있습니다. 이 페이지에서는 변경감지가 제대로 작동하지 않는 경우, 이 기능을 활성화 하는 방법과 몇가지 조정에 대해 설명합니다."),(0,n.kt)("h2",{id:"watch"},(0,n.kt)("inlineCode",{parentName:"h2"},"watch"),(0,n.kt)("a",{href:"#watch","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = false")),(0,n.kt)("p",null,"watch 모드를 켭니다. 이제 초기 빌드 후 webpack은 해석 된 파일의 변경 사항을 계속 감시합니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watch",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("a",{href:"https://github.com/webpack/webpack-dev-server",parentName:"p"},"webpack-dev-server")," 및 ",(0,n.kt)("a",{href:"https://github.com/webpack/webpack-dev-middleware",parentName:"p"},"webpack-dev-middleware"),"에서 watch 모드는 기본적으로 활성화되어 있습니다.")),(0,n.kt)("h2",{id:"watchoptions"},"watchOptions",(0,n.kt)("a",{href:"#watchoptions","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"object")),(0,n.kt)("p",null,"watch 모드를 사용자 지정하는 데 사용되는 일련의 옵션입니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    aggregateTimeout",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"200"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n    poll",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"1000"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h3",{id:"watchoptionsaggregatetimeout"},"watchOptions.aggregateTimeout",(0,n.kt)("a",{href:"#watchoptionsaggregatetimeout","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"number = 200")),(0,n.kt)("p",null,"첫 번째 파일이 변경된 후 다시 빌드하기 전에 지연을 추가합니다. 이를 통해 webpack은 이 기간 동안 일어난 다른 모든 변경 사항을 하나의 재빌드로 합칠 수 있습니다. 값은 밀리초(ms) 단위로 전달합니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    aggregateTimeout",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"600"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("h3",{id:"watchoptionsignored"},"watchOptions.ignored",(0,n.kt)("a",{href:"#watchoptionsignored","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"RegExp")," ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ",(0,n.kt)("inlineCode",{parentName:"p"},"[string]")),(0,n.kt)("p",null,"일부 시스템의 경우 많은 파일을 감시하다보면 CPU나 메모리 사용량이 증가할 수 있습니다. 정규 표현식을 사용하여 ",(0,n.kt)("inlineCode",{parentName:"p"},"node_modules"),"와 같은 거대한 폴더를 제외할 수 있습니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ignored",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token regex",parentName:"code"},"/node_modules/"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"또는, 전역 패턴을 사용할 수 있습니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ignored",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'**/node_modules'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"여러 개의 전역 패턴을 사용할 수도 있습니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ignored",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),(0,n.kt)("span",{className:"token string",parentName:"code"},"'**/files/**/*.js'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'**/node_modules'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"또한 절대 경로를 지정할 수 있습니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"const")," path ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'path'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\nmodule",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    ignored",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"["),"path",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"posix",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),(0,n.kt)("span",{className:"token function",parentName:"code"},"resolve"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),"__dirname",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'./ignored-dir'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"]"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"전역 패턴을 사용할 때는, ",(0,n.kt)("a",{href:"https://github.com/fitzgen/glob-to-regexp",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"glob-to-regexp")),"를 이용하여 정규 표현식으로 변환하기 때문에 ",(0,n.kt)("inlineCode",{parentName:"p"},"watchOptions.ignored"),"에 전역 패턴을 사용하기 전에 미리 익숙해지면 좋습니다."),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,n.kt)("p",{parentName:"aside"},(0,n.kt)("inlineCode",{parentName:"p"},"require.context"),"를 사용하면 webpack이 전체 디렉토리를 감시합니다. 원치 않는 변경으로 인해 재빌드가 발생하지 않도록 파일이나 디렉터리를 무시해야 합니다.")),(0,n.kt)("h3",{id:"watchoptionspoll"},"watchOptions.poll",(0,n.kt)("a",{href:"#watchoptionspoll","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"boolean = false")," ",(0,n.kt)("inlineCode",{parentName:"p"},"number")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"true"),"를 전달하거나 폴링 간격을 밀리초(ms)로 지정하여 ",(0,n.kt)("a",{href:"https://en.wikipedia.org/wiki/Polling_(computer_science)",parentName:"p"},"polling"),"을 사용할 수 있습니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-javascript",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    poll",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token number",parentName:"code"},"1000"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},",")," ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// Check for changes every second"),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{className:"tip__prefix",parentName:"aside"},"tip"),(0,n.kt)("p",{parentName:"aside"},"만약 감시 기능이 작동하지 않는다면, 이 옵션을 사용해 보세요. 감시 기능은 VirtualBox의 NFS 및 시스템에서는 작동하지 않습니다.")),(0,n.kt)("h3",{id:"watchoptionsfollowsymlinks"},"watchOptions.followSymlinks",(0,n.kt)("a",{href:"#watchoptionsfollowsymlinks","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Follow symbolic links while looking for a file. This is usually not needed as webpack already resolves symlinks with ",(0,n.kt)("a",{href:"/configuration/resolve/#resolvesymlinks",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.symlinks")),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Type: ",(0,n.kt)("inlineCode",{parentName:"li"},"boolean")),(0,n.kt)("li",{parentName:"ul"},"Example:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},"module",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"."),"exports ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n  ",(0,n.kt)("span",{className:"token comment",parentName:"code"},"//..."),"\n  watchOptions",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"{"),"\n    followSymlinks",(0,n.kt)("span",{className:"token operator",parentName:"code"},":")," ",(0,n.kt)("span",{className:"token boolean",parentName:"code"},"true"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n  ",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},","),"\n",(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"}"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))))),(0,n.kt)("h2",{id:"troubleshooting"},"Troubleshooting",(0,n.kt)("a",{href:"#troubleshooting","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"문제가 발생하면 다음 참고 사항을 확인하세요. webpack이 파일 변경을 놓칠 수 있는 이유는 다양합니다."),(0,n.kt)("h3",{id:"changes-seen-but-not-processed"},"Changes Seen But Not Processed",(0,n.kt)("a",{href:"#changes-seen-but-not-processed","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"--progress 플래그와 함께 webpack을 실행하여 webpack에 변경 사항이 전달되지 않는지 확인하세요. 저장할 때 진행 상황이 표시되지만 파일이 출력되지 않으면 파일 감시 문제가 아니라 구성 문제일 수 있습니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-bash",parentName:"pre"},"webpack --watch --progress")),(0,n.kt)("h3",{id:"not-enough-watchers"},"Not Enough Watchers",(0,n.kt)("a",{href:"#not-enough-watchers","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"시스템에 사용 가능한 감시자가 충분한 지 확인하세요. 이 값이 너무 낮으면, Webpack의 파일 감시자가 변경 사항을 인식하지 못합니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-bash",parentName:"pre"},(0,n.kt)("span",{className:"token function",parentName:"code"},"cat")," /proc/sys/fs/inotify/max_user_watches")),(0,n.kt)("p",null,"Arch 사용자는, ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/sysctl.d/99-sysctl.conf"),"에 ",(0,n.kt)("inlineCode",{parentName:"p"},"fs.inotify.max_user_watches=524288"),"을 추가한 후 ",(0,n.kt)("inlineCode",{parentName:"p"},"sysctl --system"),"을 실행합니다. Ubuntu 사용자 및 기타 사용자는 다음과 같이 실행합니다: ",(0,n.kt)("inlineCode",{parentName:"p"},"echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p"),"."),(0,n.kt)("h3",{id:"macos-fsevents-bug"},"macOS fsevents Bug",(0,n.kt)("a",{href:"#macos-fsevents-bug","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"macOS에서는, 특정 시나리오에서 폴더가 손상될 수 있습니다. 이 ",(0,n.kt)("a",{href:"https://github.com/livereload/livereload-site/blob/master/livereload.com/_articles/troubleshooting/os-x-fsevents-bug-may-prevent-monitoring-of-certain-folders.md",parentName:"p"},"기사"),"를 참고하세요."),(0,n.kt)("h3",{id:"windows-paths"},"Windows Paths",(0,n.kt)("a",{href:"#windows-paths","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"webpack은 ",(0,n.kt)("inlineCode",{parentName:"p"},"__dirname + '/app/folder'"),"와 같은 많은 설정 옵션에서 절대 경로를 사용할 것으로 기대하기 때문에 윈도우의 ",(0,n.kt)("inlineCode",{parentName:"p"},"\\")," 경로 구분 기호는 일부 기능을 손상시킬 수 있습니다."),(0,n.kt)("p",null,"올바른 구분 기호를 사용하세요. 예를들면, ",(0,n.kt)("inlineCode",{parentName:"p"},"path.resolve(__dirname, 'app/folder')")," 이나 ",(0,n.kt)("inlineCode",{parentName:"p"},"path.join(__dirname, 'app', 'folder')"),"와 같이 사용하세요."),(0,n.kt)("h3",{id:"vim"},"Vim",(0,n.kt)("a",{href:"#vim","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"일부 시스템에서는 Vim은 ",(0,n.kt)("a",{href:"http://vimdoc.sourceforge.net/htmldoc/options.html#'backupcopy'",parentName:"p"},"백업 카피 옵션이")," ",(0,n.kt)("inlineCode",{parentName:"p"},"auto"),"로 미리 설정되어 있습니다. 이로 인해 시스템의 파일 감시 메커니즘에 문제가 발생할 수 있습니다. 이 옵션을 ",(0,n.kt)("inlineCode",{parentName:"p"},"yes"),"로 전환하면 파일의 복사본이 만들어지고 저장 시 원본을 덮어쓰게 됩니다."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},":set backupcopy=yes")),(0,n.kt)("h3",{id:"saving-in-webstorm"},"Saving in WebStorm",(0,n.kt)("a",{href:"#saving-in-webstorm","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"JetBrains WebStorm IDE를 사용할 때, 변경된 파일을 저장해도 예상대로 감시자에게 트리거되지 않을 수 있습니다. 원래 파일을 덮어쓰기 전에 먼저 임시 위치에 저장할지 결정하는 설정에서 ",(0,n.kt)("inlineCode",{parentName:"p"},"safe write")," 옵션을 비활성화 해 보세요. 이는 메뉴에서 다음과 같이 설정할 수 있습니다. ",(0,n.kt)("inlineCode",{parentName:"p"},'File > {Settings|Preferences} > Appearance & Behavior > System Settings > Use "safe write" (변경 사항을 임시 파일에 먼저 저장합니다)'),"."))}s.isMDXComponent=!0,a.default=s}}]);