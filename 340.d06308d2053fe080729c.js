(self.webpackChunk=self.webpackChunk||[]).push([[340],{340:function(s,a,n){"use strict";n.r(a),a.default='<p><code>object</code> <code>string</code></p> <p><code>stats</code> 옵션을 사용하면 표시되는 번들 정보를 정확하게 제어할 수 있습니다. 번들 정보를 얻고 싶지만 전부에 대한 정보를 얻고자 하는 것은 아닐 것이기 때문에 <code>quiet</code> 또는 <code>noInfo</code>를 사용하지 않는 경우 좋은 절충안이 될 수 있습니다.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>webpack-dev-server의 경우 이 속성은 <a href="/configuration/dev-server/#devserverstats-"><code>devServer</code> 설정 객체</a>에 있어야 합니다.</p></aside> <aside class="warning"><h6 class="warning__prefix">warning</h6><p>이 옵션은 Node.js API를 사용할 경우에는 아무 효과가 없습니다. stats 옵션을 <code>stats.toString()</code>에 전달해야 합니다. 대신 <code>stats.toJson()</code>이 호출됩니다.</p></aside> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token string">\'errors-only\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h2 id="stats-presets">Stats Presets<a href="#stats-presets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>webpack은 stats 출력에 사용할 수있는 특정 프리셋을 함께 제공합니다.</p> <table> <thead> <tr> <th>Preset</th> <th>Alternative</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td data-th="Preset"><span><code>\'errors-only\'</code></span></td> <td data-th="Alternative"><span><em>none</em></span></td> <td data-th="Description"><span>에러가 발생할 때만 출력</span></td> </tr> <tr> <td data-th="Preset"><span><code>\'errors-warnings\'</code></span></td> <td data-th="Alternative"><span><em>none</em></span></td> <td data-th="Description"><span>에러와 경고가 발생할 때만 출력</span></td> </tr> <tr> <td data-th="Preset"><span><code>\'minimal\'</code></span></td> <td data-th="Alternative"><span><em>none</em></span></td> <td data-th="Description"><span>에러와 새로운 컴파일이 발생할 때만 출력</span></td> </tr> <tr> <td data-th="Preset"><span><code>\'none\'</code></span></td> <td data-th="Alternative"><span><code>false</code></span></td> <td data-th="Description"><span>출력 없음</span></td> </tr> <tr> <td data-th="Preset"><span><code>\'normal\'</code></span></td> <td data-th="Alternative"><span><code>true</code></span></td> <td data-th="Description"><span>표준 출력</span></td> </tr> <tr> <td data-th="Preset"><span><code>\'verbose\'</code></span></td> <td data-th="Alternative"><span><em>none</em></span></td> <td data-th="Description"><span>모두 출력</span></td> </tr> <tr> <td data-th="Preset"><span><code>\'detailed\'</code></span></td> <td data-th="Alternative"><span><em>none</em></span></td> <td data-th="Description"><span><code>chunkModules</code>과 <code>chunkRootModules</code>을 제외하고 출력</span></td> </tr> <tr> <td data-th="Preset"><span><code>\'summary\'</code></span></td> <td data-th="Alternative"><span><em>none</em></span></td> <td data-th="Description"><span>webpack 버전, 경고 횟수, 에러 횟수를 출력</span></td> </tr> </tbody> </table> <h2 id="stats-options">Stats Options<a href="#stats-options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>stats 출력에서 보고 싶은 정보를 설정할 수 있습니다.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>stats 설정 객체의 모든 옵션은 선택 사항입니다.</p></aside> <h3 id="statsall"><code>stats.all</code><a href="#statsall" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>정의되지 않은 경우 stats 옵션의 폴백입니다. 로컬 webpack의 기본값보다 우선시 됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    all<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsassets"><code>stats.assets</code><a href="#statsassets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>애셋 정보 표시 여부를 <code>stats</code>에 알려줍니다. 이 정보를 숨기려면 <code>stats.assets</code>을 <code>false</code>로 설정하세요.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    assets<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsassetssort"><code>stats.assetsSort</code><a href="#statsassetssort" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>string = \'id\'</code></p> <p>주어진 필드를 기준으로 애셋을 정렬하도록 <code>stats</code>에 지시합니다. 모든 <a href="#sorting-fields">정렬 필드</a>는 <code>stats.assetsSort</code>의 값으로 사용할 수 있습니다. 값에 <code>!</code>접두사를 사용하여 주어진 필드의 정렬 순서를 반대로 할 수 있습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    assetsSort<span class="token operator">:</span> <span class="token string">\'!size\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsbuiltat"><code>stats.builtAt</code><a href="#statsbuiltat" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>빌드 날짜 및 빌드 시간 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다. 숨기려면 <code>stats.builtAt</code>을 <code>false</code>로 설정하세요.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    builtAt<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsmoduleassets"><code>stats.moduleAssets</code><a href="#statsmoduleassets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>모듈 내부에 애셋에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다. 숨기려면 <code>stats.moduleAssets</code>을 <code>false</code>로 설정하세요.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    moduleAssets<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsassetsspace"><code>stats.assetsSpace</code><a href="#statsassetsspace" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>number = 15</code></p> <p>표시되어야 하는 애셋의 수를 <code>stats</code>에 알려줍니다. 그룹인 경우 이 크기에 맞게 축소됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    assetsSpace<span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsmodulesspace"><code>stats.modulesSpace</code><a href="#statsmodulesspace" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>number = 15</code></p> <p>표시되어야 하는 모듈의 수를 <code>stats</code>에 알려줍니다. 그룹인 경우 이 크기에 맞게 축소됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    modulesSpace<span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkmodulesspace"><code>stats.chunkModulesSpace</code><a href="#statschunkmodulesspace" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>number = 10</code></p> <p>표시되어야 하는 청크 모듈의 수를 <code>stats</code>에 알려줍니다. 그룹인 경우 이 크기에 맞게 축소됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunkModulesSpace<span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsnestedmodulesspace"><code>stats.nestedModulesSpace</code><a href="#statsnestedmodulesspace" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>number = 10</code></p> <p>표시되어야 하는 중첩된 모듈의 수를 <code>stats</code>에 알려줍니다. 그룹인 경우 이 크기에 맞게 축소됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    nestedModulesSpace<span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statscached"><code>stats.cached</code><a href="#statscached" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>stats.cachedModules</code>의 오래된 버전입니다.</p> <h3 id="statscachedmodules"><code>stats.cachedModules</code><a href="#statscachedmodules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>빌드되지 않고 캐시 된 모듈에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    cachedModules<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsruntimemodules"><code>stats.runtimeModules</code><a href="#statsruntimemodules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>런타임 모듈에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    runtimeModules<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsdependentmodules"><code>stats.dependentModules</code><a href="#statsdependentmodules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean</code></p> <p>청크의 다른 모듈에 종속된 청크 모듈을 표시할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    dependentModules<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsgroupassetsbychunk"><code>stats.groupAssetsByChunk</code><a href="#statsgroupassetsbychunk" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean</code></p> <p>애셋이 청크와 어떻게 관련되어 있는지에 따라 애셋을 그룹화할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    groupAssetsByChunk<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsgroupassetsbyemitstatus"><code>stats.groupAssetsByEmitStatus</code><a href="#statsgroupassetsbyemitstatus" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean</code></p> <p>상태(방출, 방출을 위한 비교 또는 캐시)별로 애셋을 그룹화할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    groupAssetsByEmitStatus<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsgroupassetsbyinfo"><code>stats.groupAssetsByInfo</code><a href="#statsgroupassetsbyinfo" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean</code></p> <p>애셋 정보(불변, 개발, hotModuleReplacement 등)별로 애셋을 그룹화할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    groupAssetsByInfo<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsgroupmodulesbyattributes"><code>stats.groupModulesByAttributes</code><a href="#statsgroupmodulesbyattributes" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean</code></p> <p>속성(에러, 경고, 애셋, 선택적, 고아(orphan) 또는 종속)별로 모듈을 그룹화할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    groupModulesByAttributes<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statscachedassets"><code>stats.cachedAssets</code><a href="#statscachedassets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>캐시 된 애셋에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다. <code>stats.cachedAssets</code>을 <code>false</code>로 설정하면 <code>stats</code>에 생성된 파일이 아닌 내보낸 파일만 표시됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    cachedAssets<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschildren"><code>stats.children</code><a href="#statschildren" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>children에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    children<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunks"><code>stats.chunks</code><a href="#statschunks" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>청크에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다. <code>stats.chunks</code>를 <code>false</code>로 설정하면 출력이 상세하게 표시되지 않습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunks<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkgroups"><code>stats.chunkGroups</code><a href="#statschunkgroups" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p><code>namedChunkGroups</code>에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunkGroups<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkmodules"><code>stats.chunkModules</code><a href="#statschunkmodules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>빌드된 모듈에 대한 정보를 청크에 대한 정보에 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunkModules<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkorigins"><code>stats.chunkOrigins</code><a href="#statschunkorigins" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>청크 및 청크 병합의 출처에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunkOrigins<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkssort"><code>stats.chunksSort</code><a href="#statschunkssort" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>string = \'id\'</code></p> <p>주어진 필드를 기준으로 청크를 정렬하도록 <code>stats</code>에 지시합니다. 모든 <a href="#sorting-fields">정렬 필드</a>는 <code>stats.chunksSort</code>의 값으로 사용할 수 있습니다. 값에 <code>!</code>접두사를 사용하여 주어진 필드의 정렬 순서를 반대로 할 수 있습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunksSort<span class="token operator">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statscontext"><code>stats.context</code><a href="#statscontext" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>string = \'../src/\'</code></p> <p>요청 정보를 단축하기 위한 컨텍스트 디렉터리를 설정합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    context<span class="token operator">:</span> <span class="token string">\'../src/components/\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statscolors"><code>stats.colors</code><a href="#statscolors" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code> <code>object</code></p> <p>다른 색상으로 출력할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    colors<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>CLI 플래그로도 사용할 수 있습니다.</p> <pre><code class="hljs language-bash">webpack-cli --colors</code></pre> <p><a href="https://en.wikipedia.org/wiki/ANSI_escape_code">ANSI 이스케이프 시퀀스</a>를 사용하여 자신만의 터미널 출력 색상을 지정할 수 있습니다.</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  colors<span class="token operator">:</span> <span class="token punctuation">{</span>\n    green<span class="token operator">:</span> <span class="token string">\'\\u001b[32m\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsdepth"><code>stats.depth</code><a href="#statsdepth" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p>각 모듈의 엔트리 포인트로부터의 거리를 표시할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    depth<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsentrypoints"><code>stats.entrypoints</code><a href="#statsentrypoints" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code> <code>string = \'auto\'</code></p> <p>대응하는 번들과 함께 엔트리 포인트를 표시할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    entrypoints<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><code>stats.entrypoints</code>가 <code>\'auto\'</code>로 설정되면 webpack은 stats 출력에 엔트리 포인트를 표시할지 여부를 자동으로 결정합니다.</p> <h3 id="statsenv"><code>stats.env</code><a href="#statsenv" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p><code>--env</code>정보를 표시할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    env<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsorphanmodules"><code>stats.orphanModules</code><a href="#statsorphanmodules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p><code>고아(orphan)</code>모듈을 숨길 지 여부를 <code>stats</code>에 알려줍니다. 어느 청크에도 포함되지 않는 모듈은 <code>고아(orphan)</code>입니다. 고아(orphan) 모듈은 기본적으로 <code>stats</code>에서 숨겨져 있습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    orphanModules<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statserrors"><code>stats.errors</code><a href="#statserrors" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>에러를 표시할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    errors<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statserrordetails"><code>stats.errorDetails</code><a href="#statserrordetails" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean</code> <code>string = "auto"</code></p> <p>에러에 세부 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다. 기본값은 <code>\'auto\'</code>이며 에러가 2개 이하일 때 세부 정보를 표시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    errorDetails<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statserrorstack"><code>stats.errorStack</code><a href="#statserrorstack" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>에러 스택 추적을 표시할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    errorStack<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsexcludeassets"><code>stats.excludeAssets</code><a href="#statsexcludeassets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>array = []: string | RegExp | function (assetName) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (assetName) => boolean</code></p> <p>일치하는 애셋 정보를 제외하도록 <code>stats</code>에 지시합니다. 이것은 <code>string</code>, <code>RegExp</code>, 애셋 이름을 인수로 받고 <code>boolean</code>을 반환하는 <code>function</code>로 수행할 수 있습니다. <code>stats.excludeAssets</code>는 위 요소를 원소로 가지는 <code>배열</code>일 수 있습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    excludeAssets<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">\'filter\'</span><span class="token punctuation">,</span>\n      <span class="token regex">/filter/</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span><span class="token parameter">assetName</span><span class="token punctuation">)</span> <span class="token operator">=></span> assetName<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">\'moduleA\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsexcludemodules"><code>stats.excludeModules</code><a href="#statsexcludemodules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>array = []: string | RegExp | function (assetName) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (assetName) => boolean</code> <code>boolean: false</code></p> <p>일치하는 모듈 정보를 제외하도록 <code>stats</code>에 지시합니다. 이는 <code>string</code>, <code>RegExp</code>, 모듈의 소스를 인자로 받고 <code>boolean</code>을 반환하는 <code>function</code>로 수행할 수 있습니다. <code>stats.excludeModules</code>는 위 요소를 원소로 가지는 <code>배열</code>일 수 있습니다. <code>stats.excludeModules</code>은 <code>stats.exclude</code>와 <a href="https://github.com/webpack/webpack/blob/master/lib/Stats.js#L215">병합</a>됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    excludeModules<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'filter\'</span><span class="token punctuation">,</span> <span class="token regex">/filter/</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">moduleSource</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><code>stats.excludeModules</code>을 <code>false</code>로 설정하면 제외 동작이 비활성화됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    excludeModules<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsexclude"><code>stats.exclude</code><a href="#statsexclude" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><a href="#statsexcludemodules"><code>stats.excludeModules</code></a>을 참고하세요.</p> <h3 id="statshash"><code>stats.hash</code><a href="#statshash" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>컴파일의 해시에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    hash<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statslogging"><code>stats.logging</code><a href="#statslogging" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>string = \'info\': \'none\' | \'error\' | \'warn\' | \'info\' | \'log\' | \'verbose\'</code> <code>boolean</code></p> <p>로깅 출력을 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <ul> <li><code>\'none\'</code>, <code>false</code> - 로깅 비활성화</li> <li><code>\'error\'</code> - 에러</li> <li><code>\'warn\'</code> - 에러와 경고</li> <li><code>\'info\'</code> - 에러, 경고, 정보성 메시지</li> <li><code>\'log\'</code>, <code>true</code> - 에러, 경고, 정보성 메시지, 로그 메시지, 그룹, 초기화. 접힌 그룹은 접힌 상태로 표시됩니다.</li> <li><code>\'verbose\'</code> - 디버그 및 추적을 제외한 모든 것을 기록합니다. 접힌 그룹은 펼쳐진 상태로 표시됩니다.</li> </ul> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    logging<span class="token operator">:</span> <span class="token string">\'verbose\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsloggingdebug"><code>stats.loggingDebug</code><a href="#statsloggingdebug" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>array = []: string | RegExp | function (name) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (name) => boolean</code></p> <p>플러그인 또는 로더와 같은 지정된 로거의 디버그 정보를 포함하도록 <code>stats</code>에 지시합니다. <a href="#statslogging"><code>stats.logging</code></a>이 <code>false</code>로 설정되면 <code>stats.loggingDebug</code> 옵션이 무시됩니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loggingDebug<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">\'MyPlugin\'</span><span class="token punctuation">,</span>\n      <span class="token regex">/MyPlugin/</span><span class="token punctuation">,</span>\n      <span class="token regex">/webpack/</span><span class="token punctuation">,</span> <span class="token comment">// 코어 로깅을 얻기 위해서</span>\n      <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> name<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">\'MyPlugin\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsloggingtrace"><code>stats.loggingTrace</code><a href="#statsloggingtrace" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>에러, 경고 및 추적에 대한 로깅 출력에서 스택 추적을 활성화합니다. 추적을 숨기려면 <code>stats.loggingTrace</code>를 설정하세요.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    loggingTrace<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsmodules"><code>stats.modules</code><a href="#statsmodules" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>빌드된 모듈에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    modules<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsmodulessort"><code>stats.modulesSort</code><a href="#statsmodulessort" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>string = \'id\'</code></p> <p>주어진 필드를 기준으로 모듈을 정렬하도록 <code>stats</code>에 지시합니다. 모든 <a href="#sorting-fields">정렬 필드</a>는 <code>stats.modulesSort</code>의 값으로 사용할 수 있습니다. 값에 <code>!</code>접두사를 사용하여 주어진 필드의 정렬 순서를 반대로 할 수 있습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    modulesSort<span class="token operator">:</span> <span class="token string">\'size\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsmoduletrace"><code>stats.moduleTrace</code><a href="#statsmoduletrace" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>종속성과 경고/에러의 출처를 표시하도록 <code>stats</code>에 지시합니다. <code>stats.moduleTrace</code>는 webpack 2.5.0부터 사용할 수 있습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    moduleTrace<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsoutputpath"><code>stats.outputPath</code><a href="#statsoutputpath" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p><code>stats</code>에 <code>outputPath</code>를 표시하도록 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    outputPath<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsperformance"><code>stats.performance</code><a href="#statsperformance" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>파일 크기가 <a href="/configuration/performance/#performancemaxassetsize"><code>performance.maxAssetSize</code></a>를 초과할 때 성능 힌트를 표시하도록 <code>stats</code>에 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    performance<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statspreset"><code>stats.preset</code><a href="#statspreset" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>string</code> <code>boolean: false</code></p> <p>표시되는 정보 유형에 대해 <a href="/configuration/stats/#stats-presets">프리셋</a>을 설정합니다. <a href="/configuration/stats/#extending-stats-behaviours">stats 동작 확장</a>에 유용합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    preset<span class="token operator">:</span> <span class="token string">\'minimal\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p><code>stats.preset</code>의 값을 <code>false</code>로 설정하면 webpack이 <code>\'none\'</code> <a href="/configuration/stats/#stats-presets">stats 프리셋</a>을 사용하도록 지시합니다.</p> <h3 id="statsprovidedexports"><code>stats.providedExports</code><a href="#statsprovidedexports" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p>모듈의 export를 표시하도록 <code>stats</code>에 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    providedExports<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statserrorscount"><code>stats.errorsCount</code><a href="#statserrorscount" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>에러 횟수를 추가합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    errorsCount<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statswarningscount"><code>stats.warningsCount</code><a href="#statswarningscount" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>경고 횟수를 추가합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    warningsCount<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statspublicpath"><code>stats.publicPath</code><a href="#statspublicpath" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p><code>publicPath</code>를 표시하도록 <code>stats</code>에 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    publicPath<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsreasons"><code>stats.reasons</code><a href="#statsreasons" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>모듈이 포함된 이유에 대한 정보를 추가하도록 <code>stats</code>에 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    reasons<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsrelatedassets"><code>stats.relatedAssets</code><a href="#statsrelatedassets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p>애셋의 소스맵 같이 다른 애셋과 관련된 애셋에 대한 정보를 추가할지 여부를 <code>stats</code>에 알려줍니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    relatedAssets<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statssource"><code>stats.source</code><a href="#statssource" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p><code>stats</code>에 모듈의 소스 코드를 추가하도록 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    source<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statstimings"><code>stats.timings</code><a href="#statstimings" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p><code>stats</code>에 타이밍 정보를 추가하도록 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    timings<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsids"><code>stats.ids</code><a href="#statsids" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p><code>stats</code>에 모듈과 청크의 id를 추가하도록 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    ids<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsusedexports"><code>stats.usedExports</code><a href="#statsusedexports" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p>모듈의 어떤 export가 사용되는지 표시할지 여부를 <code>stats</code>에 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    usedExports<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statsversion"><code>stats.version</code><a href="#statsversion" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>사용된 webpack 버전에 대한 정보를 추가하도록 <code>stats</code>에 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    version<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkgroupauxiliary"><code>stats.chunkGroupAuxiliary</code><a href="#statschunkgroupauxiliary" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>청크 그룹에 보조 애셋을 표시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunkGroupAuxiliary<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkgroupchildren"><code>stats.chunkGroupChildren</code><a href="#statschunkgroupchildren" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>프리페치, 프리로드 된 청크 및 애셋 같은 청크 그룹의 하위 항목을 표시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunkGroupChildren<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statschunkgroupmaxassets"><code>stats.chunkGroupMaxAssets</code><a href="#statschunkgroupmaxassets" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>number</code></p> <p>청크 그룹에 표시되는 애셋의 제한.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    chunkGroupMaxAssets<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statswarnings"><code>stats.warnings</code><a href="#statswarnings" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = true</code></p> <p>경고를 추가하도록 <code>stats</code>에 지시합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    warnings<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="statswarningsfilter"><code>stats.warningsFilter</code><a href="#statswarningsfilter" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>array = []: string | RegExp | function (warning) => boolean</code> <code>string</code> <code>RegExp</code> <code>function (warning) => boolean</code></p> <p>주어진 필터와 일치하는 경고를 제외하도록 <code>stats</code>에 지시합니다. 이것은 <code>string</code>, <code>RegExp</code>, 인자로 경고를 받고 <code>boolean</code>을 반환하는 <code>function</code>으로 수행할 수 있습니다. <code>stats.warningsFilter</code>는 위 요소를 원소로 가지는 <code>배열</code>일 수 있습니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    warningsFilter<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'filter\'</span><span class="token punctuation">,</span> <span class="token regex">/filter/</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">warning</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <aside class="warning"><h6 class="warning__prefix">warning</h6><p><code>stats.warningsFilter</code>는 지원이 중단되어 대신 <a href="/configuration/other-options/#ignorewarnings"><code>ignoreWarnings</code></a>이 사용됩니다.</p></aside> <h3 id="statschunkrelations"><code>stats.chunkRelations</code><a href="#statschunkrelations" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>boolean = false</code></p> <p><code>stats</code>에 청크의 부모, 자식 및 형제를 표시하도록 지시합니다.</p> <h3 id="sorting-fields">Sorting fields<a href="#sorting-fields" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>assetsSort</code>, <code>chunksSort</code> 및 <code>modulesSort</code>의 경우 항목을 정렬할 수 있는 몇 가지 필드가 있습니다.</p> <ul> <li><code>\'id\'</code>는 항목의 id</li> <li><code>\'name\'</code> - 가져올 때 설정된 항목의 이름</li> <li><code>\'size\'</code> - 바이트 단위의 항목 크기</li> <li><code>\'chunks\'</code> - 항목이 생성된 청크(예를 들어, 하나의 청크에 여러 개의 하위 청크가 있는 경우 하위 청크는 기본 청크에 따라 함께 그룹화 됨)</li> <li><code>\'errors\'</code> - 항목의 에러 발생량</li> <li><code>\'warnings\'</code> - 항목의 경고 발생량</li> <li><code>\'failed\'</code> - 항목 컴파일 실패 여부</li> <li><code>\'cacheable\'</code> - 항목 캐시 가능 여부</li> <li><code>\'built\'</code> - 애셋 빌드 여부</li> <li><code>\'prefetched\'</code> - 애셋 프리페치 여부</li> <li><code>\'optional\'</code> - 애셋 선택 사항 여부</li> <li><code>\'identifier\'</code> - 항목의 식별자</li> <li><code>\'index\'</code> - 항목의 처리 인덱스</li> <li><code>\'index2\'</code></li> <li><code>\'profile\'</code></li> <li><code>\'issuer\'</code> - issuer의 식별자</li> <li><code>\'issuerId\'</code> - issuer의 id</li> <li><code>\'issuerName\'</code> - issuer의 이름</li> <li><code>\'issuerPath\'</code> - 전체 issuer 객체. 이 필드를 기준으로 정렬 할 필요는 없습니다.</li> </ul> <h3 id="extending-stats-behaviours">Extending stats behaviours<a href="#extending-stats-behaviours" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>\'minimal\'</code>같은 미리 정의된 동작 중 하나를 사용하지만 하나 이상의 규칙을 재정의하는 경우, 원하는 <code>stats.preset</code>을 지정하고 사용자 지정 또는 추가 규칙을 추가하면 됩니다.</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//..</span>\n  stats<span class="token operator">:</span> <span class="token punctuation">{</span>\n    preset<span class="token operator">:</span> <span class="token string">\'minimal\'</span><span class="token punctuation">,</span>\n    moduleTrace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    errorDetails<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> '}}]);