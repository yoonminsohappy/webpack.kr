"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8400],{8400:function(t,a,d){d.r(a),a.default='<p>devtool 옵션은 소스맵 생성 여부와 방법을 제어합니다.</p> <p>보다 세밀한 설정을 위해 <a href="/plugins/source-map-dev-tool-plugin"><code>SourceMapDevToolPlugin</code></a>을 사용하세요. 기존 소스맵을 처리하려면 <a href="/loaders/source-map-loader"><code>source-map-loader</code></a>를 참고하세요.</p> <h2 id="devtool"><code>devtool</code><a href="#devtool" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><code>string = \'eval\'</code> <code>false</code></p> <p>디버깅 과정 향상을 위해 <a href="http://blog.teamtreehouse.com/introduction-source-maps">source mapping</a> 스타일을 선택합니다. 이 값은 빌드 및 리빌드 속도에 큰 영향을 미칠 수 있습니다.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>webpack 저장소에는 <a href="https://github.com/webpack/webpack/tree/master/examples/source-map">모든 <code>devtool</code> 변형 효과를 보여주는 예제</a>가 포함되어 있습니다. 이 예제는 차이점을 이해하는 데 도움이 될 것입니다.</p></aside> <p>T><code>devtool</code> 옵션을 사용하는 대신, 더 많은 옵션이 있는 <code>SourceMapDevToolPlugin</code>/<code>EvalSourceMapDevToolPlugin</code>을 직접 사용할 수도 있습니다. <code>devtool</code> 옵션과 플러그인을 함께 사용해서는 안 됩니다. <code>devtool</code> 옵션은 내부적으로 플러그인을 추가하므로 플러그인을 두 번 적용하는 것과 같습니다.</p> <table> <thead> <tr> <th>devtool</th> <th>성능</th> <th>프로덕션</th> <th>품질</th> <th>코멘트</th> </tr> </thead> <tbody> <tr> <td data-th="devtool"><span>(none)</span></td> <td data-th="성능"><span><strong>build</strong>: 가장 빠름<br/><br/><strong>rebuild</strong>: 가장 빠름</span></td> <td data-th="프로덕션"><span>가능</span></td> <td data-th="품질"><span>bundle</span></td> <td data-th="코멘트"><span>최대 성능을 갖춘 프로덕션 빌드를 위해 추천하는 옵션입니다.</span></td> </tr> <tr> <td data-th="devtool"><span><strong><code>eval</code></strong></span></td> <td data-th="성능"><span><strong>build</strong>: 빠름<br/><br/><strong>rebuild</strong>: 가장 빠름</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>generated</span></td> <td data-th="코멘트"><span>최대 성능을 갖춘 개발 빌드를 위해 추천하는 옵션입니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>eval-cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 빠름</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td data-th="코멘트"><span>개발 빌드를 위한 균형 잡힌 옵션입니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>eval-cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 빠름</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td data-th="코멘트"><span>개발 빌드를 위한 균형 잡힌 옵션입니다.</span></td> </tr> <tr> <td data-th="devtool"><span><strong><code>eval-source-map</code></strong></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 보통</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>고품질 소스맵을 포함한 개발 빌드를 위해 추천하는 옵션입니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span><code>cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span><strong><code>source-map</code></strong></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 가장 느림</span></td> <td data-th="프로덕션"><span>yes</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>고품질 소스맵을 포함한 프로덕션 빌드를 위해 추천하는 옵션입니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>inline-cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span><code>inline-cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td></td> </tr> <tr> <td data-th="devtool"><span><code>inline-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 가장 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>단일 파일을 내보낼 때 선택할 수 있습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>eval-nosources-cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 빠름</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>eval-nosources-cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 빠름</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>eval-nosources-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 보통</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>inline-nosources-cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>inline-nosources-cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>inline-nosources-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 가장 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>nosources-cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>nosources-cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>nosources-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 가장 느림</span></td> <td data-th="프로덕션"><span>yes</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>hidden-nosources-cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td data-th="코멘트"><span>참조가 없으며, 소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>hidden-nosources-cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td data-th="코멘트"><span>참조가 없으며, 소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>hidden-nosources-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 가장 느림</span></td> <td data-th="프로덕션"><span>yes</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>참조가 없으며, 소스 코드를 포함하지 않습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>hidden-cheap-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 보통<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>transformed</span></td> <td data-th="코멘트"><span>참조가 없습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>hidden-cheap-module-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 느림<br/><br/><strong>rebuild</strong>: 느림</span></td> <td data-th="프로덕션"><span>no</span></td> <td data-th="품질"><span>original lines</span></td> <td data-th="코멘트"><span>참조가 없습니다.</span></td> </tr> <tr> <td data-th="devtool"><span><code>hidden-source-map</code></span></td> <td data-th="성능"><span><strong>build</strong>: 가장 느림<br/><br/><strong>rebuild</strong>: 가장 느림</span></td> <td data-th="프로덕션"><span>yes</span></td> <td data-th="품질"><span>original</span></td> <td data-th="코멘트"><span>참조가 없으며, 에러 보고 목적으로 소스맵을 사용할 때 선택 할 수 있습니다.</span></td> </tr> </tbody> </table> <table> <thead> <tr> <th>단축 명령어</th> <th>설명</th> </tr> </thead> <tbody> <tr> <td data-th="단축 명령어"><span>performance: build</span></td> <td data-th="설명"><span>초기 빌드 성능은 devtool 설정에 어떻게 영향을 받습니까?</span></td> </tr> <tr> <td data-th="단축 명령어"><span>performance: rebuild</span></td> <td data-th="설명"><span>증분 빌드 성능은 devtool 설정에 어떻게 영향을 받습니까? 느린 devtool은 watch 모드에서 개발 피드백 루프를 줄일 수 있습니다. 보통 빌드보다 리빌드 속도가 빠를 것으로 예상하기 때문에 빌드 성능과 비교했을 때 규모가 다릅니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span>production</span></td> <td data-th="설명"><span>프로덕션 빌드에 이 devtool 을 사용하는 것이 합리적인가요? devtool이 사용자 경험에 부정적인 영향을 미칠 경우 일반적으로 <code>아니오</code> 입니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span>quality: bundled</span></td> <td data-th="설명"><span>단일 코드 blob에서 생성된 모든 청크 코드를 볼 수 있습니다. 이것은 devtooling 지원이 없는 원시 출력 파일입니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span>quality: generated</span></td> <td data-th="설명"><span>생성된 코드를 표시합니다. 하지만 브라우저 devtool에서는 각 모듈이 별도의 코드 파일로 표시됩니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span>quality: transformed</span></td> <td data-th="설명"><span>생성된 코드를 표시합니다. 코드는 로더에 의한 사전 처리가 되었으나, 추가 webpack 변환은 적용되지 않았습니다. 소스 라인만 매핑되고 생성되지 않은 열 정보는 폐기됩니다. 이를 통해 최소화 도구와 함께 작동하지 않는 줄 중간에 중단점을 설정할 수 없도록 합니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span>quality: original lines</span></td> <td data-th="설명"><span>모든 로더가 소스맵핑을 지원한다고 가정하여 개발자가 작성한 원본 코드가 표시됩니다. 소스 라인만 매핑되고 생성되지 않은 열 정보는 폐기됩니다. 이를 통해 최소화 도구와 함께 작동하지 않는 줄 중간에 중단점을 설정할 수 없도록 합니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span>quality: original</span></td> <td data-th="설명"><span>모든 로더가 소스맵핑을 지원한다고 가정하여 개발자가 작성한 원본 코드가 표시됩니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span><code>eval-*</code> addition</span></td> <td data-th="설명"><span>모듈별로 소스맵을 생성하고 eval을 통해 추가합니다 (attach it via eval). 리빌드 성능이 개선되어 개발에 권장합니다. 윈도우즈 디펜더의 바이러스 검사로 인해 속도가 크게 저하되는 문제가 있습니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span><code>inline-*</code> addition</span></td> <td data-th="설명"><span>소스맵을 별도의 파일을 만드는 대신 원본 파일에 인라인으로 추가합니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span><code>hidden-*</code> addition</span></td> <td data-th="설명"><span>소스맵에 대한 참조가 추가되지 않았습니다. 오류 보고 목적 등, 소스맵을 배포히지 않지만 반드시 생성되어야 하는 경우에 사용합니다.</span></td> </tr> <tr> <td data-th="단축 명령어"><span><code>nosources-*</code> addition</span></td> <td data-th="설명"><span>소스 코드가 소스맵에 포함되어 있지 않습니다. 이것은 원본 파일을 참조해야 할 때 유용 할 수 있습니다 (추가 설정 옵션이 필요함).</span></td> </tr> </tbody> </table> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>webpack은 devtool의 이름 유효성을 검사할 때 특정한 패턴을 예상합니다. 이 점을 숙지하고 devtool 문자열의 순서를 뒤섞지않아야 합니다. 패턴은 <code>[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map</code>입니다.</p></aside> <p>이 값 중 일부는 개발에, 일부는 프로덕션에 적합합니다. 개발의 경우 일반적으로 번들 크기 보다는 빠른 소스맵이 필요합니다. 하지만 프로덕션의 경우 정확하고 최소화를 지원하는 별도의 소스맵이 필요합니다.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>생성된 소스맵의 파일 이름을 사용자 지정하려면 <a href="/configuration/output/#outputsourcemapfilename"><code>output.sourceMapFilename</code></a>을 참조하세요.</p></aside> <h3 id="qualities">Qualities<a href="#qualities" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>bundled code</code> - 생성된 모든 코드가 큰 코드 blob으로 표시됩니다. 모듈은 서로 분리되어 있지 않습니다.</p> <p><code>generated code</code> - 각 모듈은 서로 분리되고 모듈 이름으로 주석이 표시됩니다. webpack에 의해 생성된 코드가 표시됩니다. 예를 들면 <code>import {test} from "module"; test();</code> 대신, <code>var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42); module__WEBPACK_IMPORTED_MODULE_1__.a();</code>이 표시됩니다.</p> <p><code>transformed code</code> - 각 모듈은 서로 분리되고 모듈 이름으로 주석이 표시됩니다. webpack이 변환하기 전이지만, 로더가 트랜스파일한 후의 코드가 표시됩니다. 예를 들면, <code>import {test} from "module"; class A extends test {}</code> 대신, <code>import {test} from "module"; var A = function(_test) { ... }(test);</code>와 같은 코드가 표시됩니다.</p> <p><code>original source</code> - 각 모듈은 서로 분리되고 모듈 이름으로 주석이 표시됩니다. 개발자가 작성한 트랜스파일 전의 코드를 볼 수 있습니다. 이것은 로더 지원에 따라 다릅니다.</p> <p><code>without source content</code> - 소스맵에 소스의 내용이 포함되지 않습니다. 일반적으로 브라우저는 웹 서버 또는 파일 시스템에서 소스를 로드합니다. 소스 URL과 일치하도록 <a href="/configuration/output/#outputdevtoolmodulefilenametemplate"><code>output.devtoolModuleFilenameTemplate</code></a>을 올바르게 설정해야 합니다.</p> <p><code>(lines only)</code> - 소스맵이 한 줄당 하나의 매핑으로 단순화됩니다. 이것은 일반적으로 구문당 단일 매핑을 의미합니다 (이 방식으로 개발자가 작성했다고 가정합니다). 이를 통해 구문 레벨에서 디버깅 실행을 방지하고, 하나의 라인에서 열에 중단점을 설정할 수 없습니다. 최소화 도구는 보통 한 줄로 내보내므로 최소화와 함께 사용하는 것은 불가능합니다.</p> <h3 id="development">Development<a href="#development" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>다음 옵션은 개발에 이상적입니다.</p> <p><code>eval</code> - 각 모듈을 <code>eval()</code> 및 <code>//@ sourceURL</code>을 통해 실행합니다. 이것은 꽤 빠릅니다. 원본 코드 대신 트랜스파일된 코드에 매핑되기 때문에 줄 번호가 올바르게 표시되지 않는 것이 가장 큰 단점입니다. (로더의 소스맵이 없음)</p> <p><code>eval-source-map</code> - 각 모듈을 <code>eval()</code>으로 실행되고 소스맵을 <code>eval()</code>에 DataUrl로 추가합니다. 처음에는 느리지만, 리빌드를 빠르게 제공하고 실제 파일을 생성합니다. 줄 번호는 원본 코드에 매핑되므로 올바르게 매핑됩니다. 최고 품질의 개발용 소스맵을 생성합니다.</p> <p><code>eval-cheap-source-map</code> - <code>eval-source-map</code>과 유사하며 각 모듈을 <code>eval()</code>으로 실행합니다. 열 매핑이 없고 줄 번호만 매핑하므로 비용이 "저렴"합니다. 로더의 소스맵을 무시하고 <code>eval</code> devtool과 비슷하게 트랜스파일 된 코드만 표시합니다.</p> <p><code>eval-cheap-module-source-map</code> - <code>eval-cheap-source-map</code>과 유사하지만, 이 경우 더 나은 결과를 위해 로더의 소스맵을 사용합니다. 그러나 로더의 소스맵은 라인 당 단일 매핑으로 단순화됩니다.</p> <h3 id="special-cases">Special cases<a href="#special-cases" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>다음 옵션은 개발이나 프로덕션에 적합하지 않습니다. 써드 파티 도구를 사용하는 등, 특별한 경우에 필요합니다.</p> <p><code>inline-source-map</code> - 소스맵을 DataUrl로 번들에 추가합니다.</p> <p><code>cheap-source-map</code> - 로더 소스맵을 무시하고 열 매핑이 없는 소스맵입니다.</p> <p><code>inline-cheap-source-map</code> - <code>cheap-source-map</code>과 유사하지만, 소스맵을 DataUrl로 번들에 추가합니다.</p> <p><code>cheap-module-source-map</code> - 열 매핑이없는 소스맵이며 로더의 소스맵을 줄 당 단일 매핑으로 단순화합니다.</p> <p><code>inline-cheap-module-source-map</code> - <code>cheap-module-source-map</code>과 비슷하지만, 소스맵을 DataUrl로 번들에 추가합니다.</p> <h3 id="production">Production<a href="#production" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>아래의 옵션은 일반적으로 프로덕션에서 사용됩니다.</p> <p><code>(none)</code>(<code>devtool</code> 옵션 생략) - 소스맵을 내보내지 않습니다. 이것은 시작하기에 좋은 옵션입니다.</p> <p><code>source-map</code> - 전체 소스맵을 별도의 파일로 내보냅니다. 번들에 참조 주석을 추가하여 개발 도구에서 찾을 수 있도록 합니다.</p> <aside class="warning"><h6 class="warning__prefix">warning</h6><p>일반 사용자가 소스맵 파일에 접근 할 수 없도록 서버를 구성해야합니다!</p></aside> <p><code>hidden-source-map</code> - <code>source-map</code>과 동일하지만 번들에 참조 주석을 추가하지 않습니다. 오류 보고서의 오류 스텍 추적에만 소스맵을 매핑하고 브라우저 개발 도구에는 소스맵을 노출하지 않는 경우에 유용합니다.</p> <aside class="warning"><h6 class="warning__prefix">warning</h6><p>소스맵 파일을 웹 서버에 배포해서는 안됩니다. 오류 보고 툴링에만 사용하세요.</p></aside> <p><code>nosources-source-map</code> - <code>sourcesContent</code>없이 소스맵이 생성됩니다. 모든 소스 코드를 노출하지 않고 클라이언트에서 스텍 추적을 매핑하는 데 사용할 수 있습니다. 소스맵 파일을 웹 서버에 배포 할 수 있습니다.</p> <aside class="warning"><h6 class="warning__prefix">warning</h6><p>디컴파일을 위한 파일 이름과 구조를 노출하지만 원본 코드는 노출하지 않습니다.</p></aside> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>기본 webpack <code>minimizer</code>가 재정의된 경우 (예를 들어 <code>terser-webpack-plugin</code> 옵션 사용자 정의한 경우), 소스맵 지원을 활성화하려면 <code>sourceMap: true</code>를 대신 구성해야 합니다.</p></aside> '}}]);