"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[845],{845:function(n,s,a){a.r(s),s.default='<p><code>plugins</code> 옵션은 다양한 방법으로 webpack 빌드 프로세스를 사용자 정의하는 데 사용됩니다. webpack은 사용 가능한 다양한 내장 플러그인을 <code>webpack.[plugin-name]</code>으로 제공합니다. 플러그인 및 문서 목록은 <a href="/plugins">Plugins 페이지</a>를 참고하세요. 커뮤니티에는 더 많은 내용이 있습니다.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>참고: 이 페이지에서는 플러그인 사용에 대해서만 설명합니다. 직접 플러그인을 작성하는 데 관심이 있다면 <a href="/contribute/writing-a-plugin/">Writing a Plugin</a>을 확인해보세요.</p></aside> <h2 id="plugins"><code>plugins</code><a href="#plugins" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="/plugins/"><code>[Plugin]</code></a></p> <p>webpack 플러그인의 배열입니다. 예를 들어 <a href="/plugins/define-plugin/"><code>DefinePlugin</code></a>을 사용하면 컴파일 때에 구성 가능한 전역 상수를 만들 수 있습니다. 이는 개발 빌드와 릴리스 빌드 간에 서로 다른 동작을 허용하는 데 유용합니다.</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token comment">// Definitions...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>여러 플러그인을 사용하는 더 복잡한 예는 다음과 같습니다.</p> <p><strong>webpack.config.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">var</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// webpack에 기본적으로 제공되지 않는 플러그인을 import</span>\n<span class="token keyword">var</span> DashboardPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack-dashboard/plugin\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 설정에 플러그인 추가</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>IgnorePlugin</span><span class="token punctuation">(</span><span class="token regex">/^\\.\\/locale$/</span><span class="token punctuation">,</span> <span class="token regex">/moment$/</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 컴파일 타임 플러그인</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DefinePlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token string">\'process.env.NODE_ENV\'</span><span class="token operator">:</span> <span class="token string">\'"production"\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// webpack-dev-server 향상 플러그인</span>\n    <span class="token keyword">new</span> <span class="token class-name">DashboardPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>HotModuleReplacementPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> '}}]);