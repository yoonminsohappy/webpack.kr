"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1586],{1586:function(e,s,n){n.r(s),s.default='<p>webpack은 로드하는 모든 스크립트에 <code>nonce</code>를 추가할 수 있습니다. 기능세트를 활성화하려면 엔트리 스크립트에 <code>__webpack_nonce__</code> 변수를 포함해야합니다. 고유한 해시 기반 nonce가 생성되고 고유한 페이지 뷰에 대해 각각 제공되어야 합니다. 이것이 바로 <code>__webpack_nonce__</code> 가 설정이 아닌 엔트리 파일에 지정된 이유입니다. <code>nonce</code>는 항상 base64로 인코딩된 문자열이어야 합니다.</p> <h2 id="examples">Examples<a href="#examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>엔트리 파일 안의 경우:</p> <pre><code class="hljs language-js"><span class="token comment">// ...</span>\n__webpack_nonce__ <span class="token operator">=</span> <span class="token string">\'c29tZSBjb29sIHN0cmluZyB3aWxsIHBvcCB1cCAxMjM=\'</span><span class="token punctuation">;</span>\n<span class="token comment">// ...</span></code></pre> <h2 id="enabling-csp">Enabling CSP<a href="#enabling-csp" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>CSP는 기본적으로 활성화되어 있지 않습니다. 브라우저에 CSP를 사용하도록 지시하려면 해당하는 헤더인 <code>Content-Security-Policy</code> 혹은 메타 태그 <code>&#x3C;meta http-equiv="Content-Security-Policy" ...></code>를 도큐먼트와 함께 보내야 합니다. 다음은 CDN 화이트리스트 URL을 포함한 CSP 헤더의 예시입니다.</p> <pre><code class="hljs language-html">Content-Security-Policy: default-src \'self\'; script-src \'self\'\nhttps://trusted.cdn.com;</code></pre> <p>CSP 및 <code>nonce</code> 속성에 대한 자세한 내용은 이 페이지 하단의 <strong>더 읽어보기</strong> 섹션을 참고하세요.</p> <h2 id="trusted-types">Trusted Types<a href="#trusted-types" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>Webpack은 또한 Trusted Types을 사용하여 동적으로 구성된 스크립트를 로드하고 CSP <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for"><code>require-trusted-types-for</code></a> 지시문의 제한을 준수할 수 있습니다. <a href="/configuration/output/#outputtrustedtypes"><code>output.trustedTypes</code></a> 설정 옵션을 참고하세요.</p> '}}]);