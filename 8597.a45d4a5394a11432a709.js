(self.webpackChunk=self.webpackChunk||[]).push([[8597],{8597:function(a,e,t){"use strict";t.r(e),t.d(e,{default:function(){return o}}),t(7378);var n=t(5318);function p(){return(p=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(a[n]=t[n])}return a}).apply(this,arguments)}const s={};function o({components:a,...e}){return(0,n.kt)("wrapper",p({},s,e,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("hr",null),(0,n.kt)("p",null,"title: Entry Points\nsort: 1\ncontributors:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"TheLarkInn"),(0,n.kt)("li",{parentName:"ul"},"chrisVillanueva"),(0,n.kt)("li",{parentName:"ul"},"byzyk"),(0,n.kt)("li",{parentName:"ul"},"sokra"),(0,n.kt)("li",{parentName:"ul"},"EugeneHlushko"),(0,n.kt)("li",{parentName:"ul"},"Zearin"),(0,n.kt)("li",{parentName:"ul"},"chenxsan"),(0,n.kt)("li",{parentName:"ul"},"adyjs"),(0,n.kt)("li",{parentName:"ul"},"anshumanv\ntranslators:"),(0,n.kt)("li",{parentName:"ul"},"choilim")),(0,n.kt)("hr",null),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/guides/getting-started/#using-a-configuration"},"시작하기"),"에서 언급한 바와 같이, webpack 설정에서 ",(0,n.kt)("inlineCode",{parentName:"p"},"entry")," 속성을 정의하는 방법은 여러 가지가 있습니다. ",(0,n.kt)("inlineCode",{parentName:"p"},"entry")," 속성을 설정 ",(0,n.kt)("strong",{parentName:"p"},"할 수 있는")," 방법과 유용한 이유를 설명하겠습니다."),(0,n.kt)("h2",{id:"single-entry-shorthand-syntax"},"Single Entry (Shorthand) Syntax",(0,n.kt)("a",{parentName:"h2",href:"#single-entry-shorthand-syntax","aria-hidden":"true",tabIndex:-1},(0,n.kt)("span",{parentName:"a",className:"header-link"}))),(0,n.kt)("p",null,"Usage: ",(0,n.kt)("inlineCode",{parentName:"p"},"entry: string | [string]")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./path/to/my/entry/file.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"entry")," 속성에 대한 단일 엔트리 구문은 다음 내용의 축약된 표현입니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    main",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./path/to/my/entry/file.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},'"다중-메인 엔트리"로')," 알려진 것을 생성하기 위해 ",(0,n.kt)("inlineCode",{parentName:"p"},"entry"),' 속성에 파일 경로를 배열로 전달할 수 있습니다. 이는 여러 의존성 파일을 한 번에 주입하고 해당 의존성을 하나의 "청크"에 그래프로 표시하려는 경우에 유용합니다.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"["),(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/file_1.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},",")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/file_2.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  output",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    filename",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'bundle.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,"단일 엔트리 구문은 라이브러리같이 하나의 엔트리 포인트가 있는 애플리케이션 또는 도구에 대한 webpack 설정을 빠르게 설정하려는 경우 훌륭한 선택입니다. 그러나, 이 구문을 사용하면 설정을 확장할 수 있는 유연성이 떨어지게 됩니다."),(0,n.kt)("h2",{id:"object-syntax"},"Object Syntax",(0,n.kt)("a",{parentName:"h2",href:"#object-syntax","aria-hidden":"true",tabIndex:-1},(0,n.kt)("span",{parentName:"a",className:"header-link"}))),(0,n.kt)("p",null,"Usage: ",(0,n.kt)("inlineCode",{parentName:"p"},"entry: { <entryChunkName> string | [string] } | {}")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    app",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/app.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    adminApp",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/adminApp.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,"객체 구문은 더 장황합니다. 그러나, 이것은 애플리케이션에서 엔트리를 정의하는 가장 확장 가능한 방법입니다."),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,n.kt)("p",{parentName:"aside"},"",(0,n.kt)("strong",{parentName:"p"},'"확장 가능한 webpack 설정"은')," 재사용 가능하고 설정의 다른 부분과 결합할 수 있는 것입니다. 이것은 환경, 빌드 대상, 런타임 별로 관심사를 구분하는데 사용되는 인기 있는 기술입니다. 그런 다음 ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/survivejs/webpack-merge"},"webpack-merge"),"와 같은 특수 도구를 사용하여 병합됩니다.")),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,n.kt)("p",{parentName:"aside"},"플러그인에 의해 생성된 엔트리 포인트만 있는 경우 빈 객체 ",(0,n.kt)("inlineCode",{parentName:"p"},"{}"),"를 ",(0,n.kt)("inlineCode",{parentName:"p"},"entry"),"에 전달할 수 있습니다.")),(0,n.kt)("h3",{id:"entrydescription-object"},"EntryDescription object",(0,n.kt)("a",{parentName:"h3",href:"#entrydescription-object","aria-hidden":"true",tabIndex:-1},(0,n.kt)("span",{parentName:"a",className:"header-link"}))),(0,n.kt)("p",null,"엔트리 포인트 설명이 있는 객체입니다. 다음 속성을 지정할 수 있습니다."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"dependOn"),": 현재 엔트리 포인트가 의존하는 엔트리 포인트. 이 엔트리 포인트를 로드하기 전에 로드해야 합니다.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"filename"),": 디스크에 있는 각 출력 파일의 이름을 지정합니다.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"import"),": 시작 시 로드되는 모듈입니다.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"library"),": 현재 엔트리에서 라이브러리를 번들링하려면 ",(0,n.kt)("a",{parentName:"p",href:"/configuration/output/#outputlibrary"},"라이브러리 옵션"),"을 지정합니다.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"runtime"),": 런타임 청크의 이름입니다. 설정되면 이 이름의 런타임 청크가 생성되고 그렇지 않으면 기존 엔트리 포인트의 이름이 사용됩니다.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"publicPath"),": 브라우저에서 참조할 때 이 엔트리의 출력 파일에 대한 공용 URL 주소를 지정하세요. 또한 ",(0,n.kt)("a",{parentName:"p",href:"/configuration/output/#outputpublicpath"},"output.publicPath"),"도 참고하세요."))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    a2",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'dependingfile.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    b2",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      dependOn",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'a2'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",(0,n.kt)("span",{parentName:"code",className:"token keyword"},"import"),(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/app.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"runtime"),"과 ",(0,n.kt)("inlineCode",{parentName:"p"},"dependOn"),"은 단일 엔트리에 함께 사용해서는 안되므로, 다음 설정은 유효하지 않으며 오류가 발생합니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    a2",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./a'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    b2",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      runtime",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'x2'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      dependOn",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'a2'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",(0,n.kt)("span",{parentName:"code",className:"token keyword"},"import"),(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./b'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"runtime"),"이 기존의 엔트리 포인트 이름을 가리키지 않아야 합니다. 예를 들어 아래 설정에서는 오류가 발생합니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    a1",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./a'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    b1",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      runtime",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'a1'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",(0,n.kt)("span",{parentName:"code",className:"token keyword"},"import"),(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./b'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,"또한 ",(0,n.kt)("inlineCode",{parentName:"p"},"dependOn"),"은 순환이 아니어야 하며, 다음 예제에서는 다시 오류가 발생합니다."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    a3",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",(0,n.kt)("span",{parentName:"code",className:"token keyword"},"import"),(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./a'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      dependOn",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'b3'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    b3",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",(0,n.kt)("span",{parentName:"code",className:"token keyword"},"import"),(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./b'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n      dependOn",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'a3'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("h2",{id:"scenarios"},"Scenarios",(0,n.kt)("a",{parentName:"h2",href:"#scenarios","aria-hidden":"true",tabIndex:-1},(0,n.kt)("span",{parentName:"a",className:"header-link"}))),(0,n.kt)("p",null,"다음은 엔트리 설정 및 실제 사용 사례 목록입니다."),(0,n.kt)("h3",{id:"separate-app-and-vendor-entries"},"Separate App and Vendor Entries",(0,n.kt)("a",{parentName:"h3",href:"#separate-app-and-vendor-entries","aria-hidden":"true",tabIndex:-1},(0,n.kt)("span",{parentName:"a",className:"header-link"}))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    main",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/app.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    vendor",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/vendor.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.prod.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  output",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    filename",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'[name].[contenthash].bundle.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.dev.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  output",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    filename",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'[name].bundle.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"이것은 무엇을 하나요?")," 위의 예와 같이 2개의 개별 엔트리 포인트를 원한다고 webpack에게 알려줍니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"왜?")," 이를 통해 ",(0,n.kt)("inlineCode",{parentName:"p"},"vendor.js")," 내에서 수정되지 않은 필수 라이브러리 또는 파일(예. Bootstrap, jQuery, images, 등)을 가져올 수 있으며, 이들은 자체 청크로 함께 번들 제공됩니다. 콘텐츠 해시는 동일하게 유지되므로, 브라우저가 별도로 캐시하여 로드 시간을 줄일 수 있습니다."),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,n.kt)("p",{parentName:"aside"},"webpack 버전 4 미만에서는 ",(0,n.kt)("inlineCode",{parentName:"p"},"CommonsChunkPlugin과")," 함께 vendor를 개별 엔트리 포인트로 추가하여 개별 파일로 컴파일하는 것이 일반적이었습니다. ",(0,n.kt)("br",null),(0,n.kt)("br",null)," webpack 4에서는 이를 권장하지 않습니다. 대신, ",(0,n.kt)("a",{parentName:"p",href:"/configuration/optimization/#optimizationsplitchunks"},(0,n.kt)("inlineCode",{parentName:"a"},"optimization.splitChunks"))," 옵션은 vendor와 앱 모듈을 분리하고 별도의 파일을 생성합니다. 실행의 시작점이 아닌 vendor나 기타 항목에 대한 엔트리를 생성하지 ",(0,n.kt)("strong",{parentName:"p"},"마세요"),".")),(0,n.kt)("h3",{id:"multi-page-application"},"Multi Page Application",(0,n.kt)("a",{parentName:"h3",href:"#multi-page-application","aria-hidden":"true",tabIndex:-1},(0,n.kt)("span",{parentName:"a",className:"header-link"}))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"hljs language-javascript"},"module",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,n.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    pageOne",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/pageOne/index.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    pageTwo",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/pageTwo/index.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    pageThree",(0,n.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,n.kt)("span",{parentName:"code",className:"token string"},"'./src/pageThree/index.js'"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,n.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,n.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"이것은 무엇을 하나요?")," 위의 예와 같이 3개의 개별 디펜던시 그래프를 원한다고 webpack에게 알려줍니다."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"왜?")," 멀티 페이지 애플리케이션에서 서버가 새 HTML 문서를 가져옵니다. 페이지가 새 문서를 다시 로드하고 애셋이 다시 다운로드됩니다. 그러나, 이것은 ",(0,n.kt)("a",{parentName:"p",href:"/configuration/optimization/#optimizationsplitchunks"},(0,n.kt)("inlineCode",{parentName:"a"},"optimization.splitChunks")),"를 사용하여 각 페이지 간에 공유되는 애플리케이션 코드 번들을 만드는 것과 같은 작업을 수행할 특별한 기회를 제공합니다. 엔트리 포인트들 사이에 코드/모듈을 많이 재사용하는 멀티 페이지 애플리케이션은 엔트리 포인트 수가 증가함에 따라 이런 기법의 혜택을 크게 얻을 수 있습니다."),(0,n.kt)("aside",{className:"tip"},(0,n.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,n.kt)("p",{parentName:"aside"},"경험상 각 HTML의 문서에 정확히 하나의 엔트리 포인트를 사용합니다. 자세한 내용은 ",(0,n.kt)("a",{parentName:"p",href:"https://bundlers.tooling.report/code-splitting/multi-entry/#webpack"},"이곳에서 설명한")," 이슈를 참고하세요.")))}o.isMDXComponent=!0}}]);