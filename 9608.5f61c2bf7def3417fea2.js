(self.webpackChunk=self.webpackChunk||[]).push([[9608],{9608:function(e,a,o){"use strict";o.r(a),a.default='<p>The <code>ContextModuleFactory</code> module is used by the <code>Compiler</code> to generate dependencies from webpack specific <a href="/api/module-methods/#requirecontext">require.context</a> API. It resolves the requested directory, generates requests for each file and filters against passed regExp. Matching dependencies then passes through <a href="/api/normalmodulefactory-hooks">NormalModuleFactory</a>.</p> <p>The <code>ContextModuleFactory</code> class extends <code>Tapable</code> and provides the following lifecycle hooks. They can be tapped the same way as compiler hooks:</p> <pre><code class="hljs language-js">ContextModuleFactory<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>someHook<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span><span class="token comment">/* ... */</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>As with the <code>compiler</code>, <code>tapAsync</code> and <code>tapPromise</code> may also be available depending on the type of hook.</p> <h3 id="beforeresolve">beforeResolve<a href="#beforeresolve" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>AsyncSeriesWaterfallHook</code></p> <p>Called before resolving the requested directory. The request can be ignored by returning <code>false</code>.</p> <ul> <li>Callback Parameters: <code>data</code></li> </ul> <h3 id="afterresolve">afterResolve<a href="#afterresolve" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>AsyncSeriesWaterfallHook</code></p> <p>Called after the requested directory resolved.</p> <ul> <li>Callback Parameters: <code>data</code></li> </ul> <h3 id="contextmodulefiles">contextModuleFiles<a href="#contextmodulefiles" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>SyncWaterfallHook</code></p> <p>Called after directory contents are read. On recursive mode, calls for each sub-directory as well. Callback parameter is an array of all file and folder names in each directory.</p> <ul> <li>Callback Parameters: <code>fileNames</code></li> </ul> <h3 id="alternativerequests">alternativeRequests<a href="#alternativerequests" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p><code>AsyncSeriesWaterfallHook</code></p> <p>Called for each file after the request is created but before filtering against regExp.</p> <ul> <li>Callback Parameters: <code>request</code> <code>options</code></li> </ul> '}}]);