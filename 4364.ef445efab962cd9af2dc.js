(self.webpackChunk=self.webpackChunk||[]).push([[4364],{4364:function(a,e,n){"use strict";n.r(e),n.d(e,{default:function(){return k}}),n(7378);var t=n(5318);function s(){return(s=Object.assign||function(a){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(a[t]=n[t])}return a}).apply(this,arguments)}const p=("StackBlitzPreview",function(a){return console.warn("Component StackBlitzPreview was not imported, exported, or provided by MDXProvider as global scope"),(0,t.kt)("div",a)});const m={};function k({components:a,...e}){return(0,t.kt)("wrapper",s({},m,e,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("hr",null),(0,t.kt)("p",null,"title: Getting Started\ndescription: Learn how to bundle a JavaScript application with webpack 5.\nsort: 1\ncontributors:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"bebraw"),(0,t.kt)("li",{parentName:"ul"},"varunjayaraman"),(0,t.kt)("li",{parentName:"ul"},"cntanglijun"),(0,t.kt)("li",{parentName:"ul"},"chrisVillanueva"),(0,t.kt)("li",{parentName:"ul"},"johnstew"),(0,t.kt)("li",{parentName:"ul"},"simon04"),(0,t.kt)("li",{parentName:"ul"},"aaronang"),(0,t.kt)("li",{parentName:"ul"},"TheDutchCoder"),(0,t.kt)("li",{parentName:"ul"},"sudarsangp"),(0,t.kt)("li",{parentName:"ul"},"Vanguard90"),(0,t.kt)("li",{parentName:"ul"},"chenxsan"),(0,t.kt)("li",{parentName:"ul"},"EugeneHlushko"),(0,t.kt)("li",{parentName:"ul"},"ATGardner"),(0,t.kt)("li",{parentName:"ul"},"ayvarot"),(0,t.kt)("li",{parentName:"ul"},"bjarki"),(0,t.kt)("li",{parentName:"ul"},"ztomasze"),(0,t.kt)("li",{parentName:"ul"},"Spiral90210"),(0,t.kt)("li",{parentName:"ul"},"byzyk"),(0,t.kt)("li",{parentName:"ul"},"wizardofhogwarts"),(0,t.kt)("li",{parentName:"ul"},"myshov"),(0,t.kt)("li",{parentName:"ul"},"anshumanv"),(0,t.kt)("li",{parentName:"ul"},"d3lm\ntranslators:"),(0,t.kt)("li",{parentName:"ul"},"limong")),(0,t.kt)("hr",null),(0,t.kt)("p",null,"webpack은 JavaScript 모듈을 컴파일할 때 사용됩니다. ",(0,t.kt)("a",{parentName:"p",href:"/guides/installation"},"설치하면"),", ",(0,t.kt)("a",{parentName:"p",href:"/api/cli"},"CLI")," 또는 ",(0,t.kt)("a",{parentName:"p",href:"/api/node"},"API"),"로 webpack과 상호 작용할 수 있습니다. 아직 webpack이 익숙하지 않은 경우 ",(0,t.kt)("a",{parentName:"p",href:"/concepts"},"핵심 개념"),"과 ",(0,t.kt)("a",{parentName:"p",href:"/comparison"},"비교 내용"),"을 통해 커뮤니티의 다른 도구보다 왜 webpack을 사용해야 할지 알아보세요."),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{parentName:"aside",className:"warning__prefix"},"warning"),(0,t.kt)("p",{parentName:"aside"},"webpack 5를 실행하기 위한 최소 Node.js 버전은 10.13.0(LTS) 입니다.")),(0,t.kt)(p,{example:"getting-started?terminal=",mdxType:"StackBlitzPreview"}),(0,t.kt)("h2",{id:"basic-setup"},"Basic Setup",(0,t.kt)("a",{parentName:"h2",href:"#basic-setup","aria-hidden":"true",tabIndex:-1},(0,t.kt)("span",{parentName:"a",className:"header-link"}))),(0,t.kt)("p",null,"먼저 디렉터리를 생성합니다. 그 다음 npm을 초기화하고, ",(0,t.kt)("a",{parentName:"p",href:"/guides/installation/#local-installation"},"webpack을 로컬로 설치"),"한 후 ",(0,t.kt)("a",{parentName:"p",href:"https://github.com/webpack/webpack-cli"},(0,t.kt)("inlineCode",{parentName:"a"},"webpack-cli")),"(커맨드-라인에서 webpack을 실행할 때 사용되는 도구)를 설치합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-bash"},(0,t.kt)("span",{parentName:"code",className:"token function"},"mkdir")," webpack-demo\n",(0,t.kt)("span",{parentName:"code",className:"token builtin class-name"},"cd")," webpack-demo\n",(0,t.kt)("span",{parentName:"code",className:"token function"},"npm")," init -y\n",(0,t.kt)("span",{parentName:"code",className:"token function"},"npm")," ",(0,t.kt)("span",{parentName:"code",className:"token function"},"install")," webpack webpack-cli --save-dev")),(0,t.kt)("p",null,"가이드 전반에 걸쳐 ",(0,t.kt)("strong",{parentName:"p"},(0,t.kt)("inlineCode",{parentName:"strong"},"diff"))," 블록을 사용하여 디렉터리, 파일 코드의 변경을 보여줍니다. 예를 들면,"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"}," 이것은 코드에 복사할 새로운 라인 입니다.\n")),(0,t.kt)("span",{parentName:"code",className:"token deleted-sign deleted"},(0,t.kt)("span",{parentName:"span",className:"token prefix deleted"},"-"),(0,t.kt)("span",{parentName:"span",className:"token line"}," 그리고 이것은 코드에서 삭제될 라인 입니다.\n")),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," 그리고 이것은 손대지 말아야 할 라인 입니다.")))),(0,t.kt)("p",null,"이제 다음의 디렉터리 구조와 파일, 콘텐츠를 생성합니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," webpack-demo\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- package.json\n")),(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- index.html\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- /src\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},"   |- index.js")))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-javascript"},(0,t.kt)("span",{parentName:"code",className:"token keyword"},"function")," ",(0,t.kt)("span",{parentName:"code",className:"token function"},"component"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",(0,t.kt)("span",{parentName:"code",className:"token keyword"},"const")," element ",(0,t.kt)("span",{parentName:"code",className:"token operator"},"=")," document",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,t.kt)("span",{parentName:"code",className:"token function"},"createElement"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,t.kt)("span",{parentName:"code",className:"token string"},"'div'"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",(0,t.kt)("span",{parentName:"code",className:"token comment"},"// 이 라인이 동작하려면 현재 스크립트를 통해 포함된 Lodash가 필요합니다."),"\n  element",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"."),"innerHTML ",(0,t.kt)("span",{parentName:"code",className:"token operator"},"=")," _",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,t.kt)("span",{parentName:"code",className:"token function"},"join"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),(0,t.kt)("span",{parentName:"code",className:"token string"},"'Hello'"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},",")," ",(0,t.kt)("span",{parentName:"code",className:"token string"},"'webpack'"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},",")," ",(0,t.kt)("span",{parentName:"code",className:"token string"},"' '"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",(0,t.kt)("span",{parentName:"code",className:"token keyword"},"return")," element",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},";"),"\n",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\ndocument",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"."),"body",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,t.kt)("span",{parentName:"code",className:"token function"},"appendChild"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,t.kt)("span",{parentName:"code",className:"token function"},"component"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"index.html")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-html"},(0,t.kt)("span",{parentName:"code",className:"token doctype"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<!"),(0,t.kt)("span",{parentName:"span",className:"token doctype-tag"},"DOCTYPE")," ",(0,t.kt)("span",{parentName:"span",className:"token name"},"html"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"html"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"head"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n    ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"meta")," ",(0,t.kt)("span",{parentName:"span",className:"token attr-name"},"charset"),(0,t.kt)("span",{parentName:"span",className:"token attr-value"},(0,t.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"utf-8",(0,t.kt)("span",{parentName:"span",className:"token punctuation"},'"'))," ",(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"/>")),"\n    ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"title"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"Getting Started",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"title"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n    ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"script")," ",(0,t.kt)("span",{parentName:"span",className:"token attr-name"},"src"),(0,t.kt)("span",{parentName:"span",className:"token attr-value"},(0,t.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"https://unpkg.com/lodash@4.17.20",(0,t.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,t.kt)("span",{parentName:"code",className:"token script"}),(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"script"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"head"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"body"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n    ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"<"),"script")," ",(0,t.kt)("span",{parentName:"span",className:"token attr-name"},"src"),(0,t.kt)("span",{parentName:"span",className:"token attr-value"},(0,t.kt)("span",{parentName:"span",className:"token punctuation attr-equals"},"="),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},'"'),"./src/index.js",(0,t.kt)("span",{parentName:"span",className:"token punctuation"},'"')),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),(0,t.kt)("span",{parentName:"code",className:"token script"}),(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"script"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n  ",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"body"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")),"\n",(0,t.kt)("span",{parentName:"code",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token tag"},(0,t.kt)("span",{parentName:"span",className:"token punctuation"},"</"),"html"),(0,t.kt)("span",{parentName:"span",className:"token punctuation"},">")))),(0,t.kt)("p",null,"또한 패키지를 ",(0,t.kt)("inlineCode",{parentName:"p"},"private"),"로 표기하고 ",(0,t.kt)("inlineCode",{parentName:"p"},"main")," 항목을 제거하기 위해 ",(0,t.kt)("inlineCode",{parentName:"p"},"package.json")," 파일을 조정해야 합니다. 이것은 실수로 코드가 출시되는 것을 방지하기 위한 것입니다."),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,t.kt)("p",{parentName:"aside"},"",(0,t.kt)("inlineCode",{parentName:"p"},"package.json"),"의 내부 동작을 더 알고 싶으면 ",(0,t.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/files/package.json"},"npm 문서"),"를 읽어 보시기 바랍니다.")),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"package.json")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"{\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "name": "webpack-demo",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "version": "1.0.0",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "description": "",\n')),(0,t.kt)("span",{parentName:"code",className:"token deleted-sign deleted"},(0,t.kt)("span",{parentName:"span",className:"token prefix deleted"},"-"),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "main": "index.js",\n')),(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "private": true,\n')),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "scripts": {\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "test": "echo \\"Error: no test specified\\" && exit 1"\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  },\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "keywords": [],\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "author": "",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "license": "MIT",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "devDependencies": {\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "webpack": "^5.38.1",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "webpack-cli": "^4.7.2",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  }\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"}")))),(0,t.kt)("p",null,"예시에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"<script>")," 태그 사이에는 암시적인 의존성이 있습니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"index.js")," 파일은 실행되기 전에 페이지에 포함되는 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash"),"와 연관이 있습니다. 이는 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.js"),"가 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash"),"의 필요성을 명시적으로 선언하지 않았기 때문입니다. 단지 전역 변수인 ",(0,t.kt)("inlineCode",{parentName:"p"},"_"),"가 존재하는지 추정할 뿐입니다."),(0,t.kt)("p",null,"이러한 방식으로 JavaScript 프로젝트를 관리하는 것은 문제가 있습니다."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"해당 스크립트가 외부 라이브러리에 의존한다는 것이 명확하지 않습니다."),(0,t.kt)("li",{parentName:"ul"},"의존성을 잃어버렸거나 잘못된 순서로 포함되었으면 애플리케이션이 제대로 작동하지 않습니다."),(0,t.kt)("li",{parentName:"ul"},"의존성이 포함되었지만 사용되지 않는 경우에도 브라우저는 필요 없는 코드를 강제로 다운로드합니다.")),(0,t.kt)("p",null,"대신 webpack을 사용하여 이러한 스크립트를 관리할 수 있습니다."),(0,t.kt)("h2",{id:"creating-a-bundle"},"Creating a Bundle",(0,t.kt)("a",{parentName:"h2",href:"#creating-a-bundle","aria-hidden":"true",tabIndex:-1},(0,t.kt)("span",{parentName:"a",className:"header-link"}))),(0,t.kt)("p",null,'먼저 디렉터리 구조를 약간 수정하여 "배포" 코드(',(0,t.kt)("inlineCode",{parentName:"p"},"./dist"),')를 "소스" 코드(',(0,t.kt)("inlineCode",{parentName:"p"},"./src"),')와 분리합니다. "소스" 코드는 우리가 작성하고 편집하는 코드입니다. "배포" 코드는 빌드 과정을 통해 최소화하고 최적화되어 궁극적으로 브라우저에서 로드될 ',(0,t.kt)("inlineCode",{parentName:"p"},"출력물")," 입니다. 다음과 같이 디렉터리 구조를 변경합니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," webpack-demo\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- package.json\n")),(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- /dist\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},"   |- index.html\n")),(0,t.kt)("span",{parentName:"code",className:"token deleted-sign deleted"},(0,t.kt)("span",{parentName:"span",className:"token prefix deleted"},"-"),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- index.html\n")),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- /src\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"   |- index.js")))),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,t.kt)("p",{parentName:"aside"},"자세히 관찰한 분들은 비록 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html"),"이 ",(0,t.kt)("inlineCode",{parentName:"p"},"dist")," 디렉터리에 있지만, 수동으로 생성되었다는 것을 알아챘을 것입니다. 나중에 ",(0,t.kt)("a",{parentName:"p",href:"/guides/output-management/#setting-up-htmlwebpackplugin"},"다른 가이드에서"),", ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html"),"을 수동으로 수정하는 대신 자동으로 생성할 것입니다. 이 작업이 완료되면 ",(0,t.kt)("inlineCode",{parentName:"p"},"dist")," 디렉터리를 비우고 모든 파일을 다시 생성해도 좋습니다.")),(0,t.kt)("p",null,(0,t.kt)("inlineCode",{parentName:"p"},"lodash"),"의 의존성을 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.js"),"와 함께 번들링 하려면, 라이브러리를 로컬에서 설치해야 합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-bash"},(0,t.kt)("span",{parentName:"code",className:"token function"},"npm")," ",(0,t.kt)("span",{parentName:"code",className:"token function"},"install")," --save lodash")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,t.kt)("p",{parentName:"aside"},"프로덕션 번들에 번들로 제공될 패키지를 설치할 때 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm install --save"),"를 사용해야 합니다. 개발 목적(e.g. a linter, testing libraries, etc.)으로 패키지를 설치한다면 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm install --save-dev"),"를 사용해야 합니다. 자세한 내용은 ",(0,t.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/cli/install"},"npm 문서를")," 참고하세요.")),(0,t.kt)("p",null,"지금부터 스크립트로 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash"),"를 가져오겠습니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"src/index.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},"import _ from 'lodash';\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},"\n")),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"function component() {\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  const element = document.createElement('div');\n")),"\n",(0,t.kt)("span",{parentName:"code",className:"token deleted-sign deleted"},(0,t.kt)("span",{parentName:"span",className:"token prefix deleted"},"-"),(0,t.kt)("span",{parentName:"span",className:"token line"},"  // 이 라인이 동작하려면 현재 스크립트를 통해 포함된 Lodash가 필요합니다.\n")),(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},"  // 이제 Lodash를 스크립트로 가져왔습니다.\n")),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n")),"\n",(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  return element;\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"}\n")),"\n",(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"document.body.appendChild(component());")))),(0,t.kt)("p",null,"이제 스크립트로 번들링 할 것이므로 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html"),"을 업데이트해야 합니다. 현재 ",(0,t.kt)("inlineCode",{parentName:"p"},"import"),"한 lodash ",(0,t.kt)("inlineCode",{parentName:"p"},"<script>"),"를 삭제하고 원래의 ",(0,t.kt)("inlineCode",{parentName:"p"},"./src")," 파일 대신 다른 ",(0,t.kt)("inlineCode",{parentName:"p"},"<script>")," 태그로 번들을 로드하도록 수정합니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"dist/index.html")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"<!DOCTYPE html>\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"<html>\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  <head>\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'    <meta charset="utf-8" />\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"    <title>Getting Started</title>\n")),(0,t.kt)("span",{parentName:"code",className:"token deleted-sign deleted"},(0,t.kt)("span",{parentName:"span",className:"token prefix deleted"},"-"),(0,t.kt)("span",{parentName:"span",className:"token line"},'    <script src="https://unpkg.com/lodash@4.17.20"><\/script>\n')),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  </head>\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  <body>\n")),(0,t.kt)("span",{parentName:"code",className:"token deleted-sign deleted"},(0,t.kt)("span",{parentName:"span",className:"token prefix deleted"},"-"),(0,t.kt)("span",{parentName:"span",className:"token line"},'    <script src="./src/index.js"><\/script>\n')),(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},'    <script src="main.js"><\/script>\n')),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  </body>\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"</html>")))),(0,t.kt)("p",null,"이 설정에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.js"),"는 명시적으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"lodash"),"가 있어야 하며, 이것을 ",(0,t.kt)("inlineCode",{parentName:"p"},"_"),"에 바인딩합니다.(글로벌 스코프의 오염 없음) 모듈에 필요한 의존성을 명시함으로써 webpack은 이 정보를 사용하여 디펜던시 그래프를 만들 수 있습니다. 그런 다음 그래프를 사용하여 스크립트가 올바른 순서로 실행되는 최적화된 번들을 생성합니다."),(0,t.kt)("p",null,"그럼 ",(0,t.kt)("inlineCode",{parentName:"p"},"npx webpack"),"을 실행해 보겠습니다. 이 스크립트는 ",(0,t.kt)("inlineCode",{parentName:"p"},"src/index.js"),"를 ",(0,t.kt)("a",{parentName:"p",href:"/concepts/entry-points"},"엔트리 포인트"),"로 사용하고 ",(0,t.kt)("a",{parentName:"p",href:"/concepts/output"},"output"),"으로 ",(0,t.kt)("inlineCode",{parentName:"p"},"dist/main.js"),"을 생성합니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"npx")," 명령어는 Node 8.2/npm 5.2.0 이상 버전에서 제공되며, 처음에 설치했던 webpack 패키지의 webpack 바이너리(",(0,t.kt)("inlineCode",{parentName:"p"},"./node_modules/.bin/webpack"),")를 실행합니다."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-bash"},"$ npx webpack\n",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"webpack-cli",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," Compilation finished\nasset main.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"69.3")," KiB ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"emitted",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"minimized",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),"name: main",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")")," ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1")," related asset\nruntime modules ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1000")," bytes ",(0,t.kt)("span",{parentName:"code",className:"token number"},"5")," modules\ncacheable modules ",(0,t.kt)("span",{parentName:"code",className:"token number"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"257")," bytes ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"built",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"code generated",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"530")," KiB ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"built",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"code generated",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]"),"\nwebpack ",(0,t.kt)("span",{parentName:"code",className:"token number"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{parentName:"code",className:"token keyword"},"in")," ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1851")," ms")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,t.kt)("p",{parentName:"aside"},"출력은 약간 다를 수 있지만, 빌드에 성공했다면 계속 진행해도 좋습니다.")),(0,t.kt)("p",null,"브라우저에서 ",(0,t.kt)("inlineCode",{parentName:"p"},"dist")," 디렉터리의 ",(0,t.kt)("inlineCode",{parentName:"p"},"index.html"),"을 열어봅니다. 모든 것이 제대로 되었다면 ",(0,t.kt)("inlineCode",{parentName:"p"},"'Hello webpack'")," 글자가 표시될 것입니다."),(0,t.kt)("h2",{id:"modules"},"Modules",(0,t.kt)("a",{parentName:"h2",href:"#modules","aria-hidden":"true",tabIndex:-1},(0,t.kt)("span",{parentName:"a",className:"header-link"}))),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import"},(0,t.kt)("inlineCode",{parentName:"a"},"import 문")),"과 ",(0,t.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export"},(0,t.kt)("inlineCode",{parentName:"a"},"export 문")),"은 ",(0,t.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/learn/"},"ES2015"),"에서 표준화되었습니다. 현재는 대부분의 브라우저에서 지원되지만, 몇몇 브라우저에서는 새 구문을 인식하지 못합니다. 하지만 webpack은 바로 사용할 수 있도록 지원해주니 걱정하지 마세요."),(0,t.kt)("p",null,'보이지않는 곳에서 webpack이 실제로 코드를 "',(0,t.kt)("strong",{parentName:"p"},"트랜스파일"),'" 하여 이전 브라우저에서도 실행 할 수 있도록 합니다. ',(0,t.kt)("inlineCode",{parentName:"p"},"dist/main.js"),"을 보면 webpack이 어떻게 트랜스파일 하는지 볼 수 있을 것입니다. 매우 독창적입니다! ",(0,t.kt)("inlineCode",{parentName:"p"},"import"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"export")," 외에도 webpack은 다양한 모듈 구문을 지원합니다. 자세한 내용은 ",(0,t.kt)("a",{parentName:"p",href:"/api/module-methods"},"Module API에서")," 볼 수 있습니다."),(0,t.kt)("p",null,"webpack은 ",(0,t.kt)("inlineCode",{parentName:"p"},"import"),"와 ",(0,t.kt)("inlineCode",{parentName:"p"},"export")," 문 이외는 코드를 변경하지 않습니다. 다른 ",(0,t.kt)("a",{parentName:"p",href:"http://es6-features.org/"},"ES2015 기능"),"을 사용한다면 webpack의 ",(0,t.kt)("a",{parentName:"p",href:"/concepts/loaders/"},"로더 시스템"),"인 ",(0,t.kt)("a",{parentName:"p",href:"https://babeljs.io/"},"Babel"),"이나 ",(0,t.kt)("a",{parentName:"p",href:"https://buble.surge.sh/guide/"},"Bublé"),"을 ",(0,t.kt)("a",{parentName:"p",href:"/loaders/#transpiling"},"트랜스파일러로 사용"),"해야 합니다."),(0,t.kt)("h2",{id:"using-a-configuration"},"Using a Configuration",(0,t.kt)("a",{parentName:"h2",href:"#using-a-configuration","aria-hidden":"true",tabIndex:-1},(0,t.kt)("span",{parentName:"a",className:"header-link"}))),(0,t.kt)("p",null,"버전 4부터 webpack은 어떠한 설정도 필요하지 않습니다. 하지만 대부분의 프로젝트는 좀 더 복잡한 설정이 필요하므로 webpack에서 ",(0,t.kt)("a",{parentName:"p",href:"/concepts/configuration"},"설정 파일"),"을 제공합니다. 이것은 터미널에서 많은 명령어를 수동으로 입력하는 것보다 훨씬 효율적입니다. 다음과 같이 생성해 보겠습니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," webpack-demo\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- package.json\n")),(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- webpack.config.js\n")),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- /dist\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"   |- index.html\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- /src\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"   |- index.js")))),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"webpack.config.js")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-javascript"},(0,t.kt)("span",{parentName:"code",className:"token keyword"},"const")," path ",(0,t.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,t.kt)("span",{parentName:"code",className:"token function"},"require"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),(0,t.kt)("span",{parentName:"code",className:"token string"},"'path'"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},";"),"\n\nmodule",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"."),"exports ",(0,t.kt)("span",{parentName:"code",className:"token operator"},"=")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  entry",(0,t.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,t.kt)("span",{parentName:"code",className:"token string"},"'./src/index.js'"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  output",(0,t.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    filename",(0,t.kt)("span",{parentName:"code",className:"token operator"},":")," ",(0,t.kt)("span",{parentName:"code",className:"token string"},"'main.js'"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n    path",(0,t.kt)("span",{parentName:"code",className:"token operator"},":")," path",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"."),(0,t.kt)("span",{parentName:"code",className:"token function"},"resolve"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),"__dirname",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},",")," ",(0,t.kt)("span",{parentName:"code",className:"token string"},"'dist'"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},","),"\n",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"}"),(0,t.kt)("span",{parentName:"code",className:"token punctuation"},";"))),(0,t.kt)("p",null,"이제 새로운 설정 파일을 이용하여 다시 빌드를 실행해 보세요."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-bash"},"$ npx webpack --config webpack.config.js\n",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"webpack-cli",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," Compilation finished\nasset main.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"69.3")," KiB ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"compared ",(0,t.kt)("span",{parentName:"code",className:"token keyword"},"for")," emit",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"minimized",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),"name: main",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")")," ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1")," related asset\nruntime modules ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1000")," bytes ",(0,t.kt)("span",{parentName:"code",className:"token number"},"5")," modules\ncacheable modules ",(0,t.kt)("span",{parentName:"code",className:"token number"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"257")," bytes ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"built",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"code generated",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"530")," KiB ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"built",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"code generated",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]"),"\nwebpack ",(0,t.kt)("span",{parentName:"code",className:"token number"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{parentName:"code",className:"token keyword"},"in")," ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1934")," ms")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,t.kt)("p",{parentName:"aside"},"",(0,t.kt)("inlineCode",{parentName:"p"},"webpack.config.js"),"가 있으면 ",(0,t.kt)("inlineCode",{parentName:"p"},"webpack")," 명령은 기본으로 이것을 선택합니다. 여기서는 ",(0,t.kt)("inlineCode",{parentName:"p"},"--config")," 옵션을 사용하여 어떠한 이름의 설정이던 사용할 수 있도록 합니다. 이것은 여러 개의 파일로 분할해야 하는 복잡한 설정에서 유용합니다.")),(0,t.kt)("p",null,"설정 파일은 단순한 CLI 사용보다 훨씬 많은 유연성을 제공합니다. 로더의 규칙, 플러그인, 해석 옵션 및 기타 여러 향상된 기능을 지정할 수 있습니다. 더 자세한 것은 ",(0,t.kt)("a",{parentName:"p",href:"/configuration"},"설정 문서"),"를 참고하세요."),(0,t.kt)("h2",{id:"npm-scripts"},"NPM Scripts",(0,t.kt)("a",{parentName:"h2",href:"#npm-scripts","aria-hidden":"true",tabIndex:-1},(0,t.kt)("span",{parentName:"a",className:"header-link"}))),(0,t.kt)("p",null,"CLI에서 webpack의 로컬 사본을 실행하기 위해 약간의 단축 명령어를 설정 할 수 있습니다. ",(0,t.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/misc/scripts"},"npm script"),"를 추가하여 ",(0,t.kt)("em",{parentName:"p"},"package.json을")," 수정해 보겠습니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"package.json")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"{\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "name": "webpack-demo",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "version": "1.0.0",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "description": "",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "private": true,\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "scripts": {\n')),(0,t.kt)("span",{parentName:"code",className:"token deleted-sign deleted"},(0,t.kt)("span",{parentName:"span",className:"token prefix deleted"},"-"),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "test": "echo \\"Error: no test specified\\" && exit 1"\n')),(0,t.kt)("span",{parentName:"code",className:"token inserted-sign inserted"},(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "test": "echo \\"Error: no test specified\\" && exit 1",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix inserted"},"+"),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "build": "webpack"\n')),(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  },\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "keywords": [],\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "author": "",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "license": "ISC",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "devDependencies": {\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "webpack": "^5.4.0",\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "webpack-cli": "^4.2.0"\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  },\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'  "dependencies": {\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},'    "lodash": "^4.17.20"\n'),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"  }\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"},"}")))),(0,t.kt)("p",null,"이제 이전에 사용한 ",(0,t.kt)("inlineCode",{parentName:"p"},"npx")," 명령 대신 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm run build")," 명령을 사용할 수 있습니다. ",(0,t.kt)("inlineCode",{parentName:"p"},"scripts"),"에서는 ",(0,t.kt)("inlineCode",{parentName:"p"},"npx"),"와 동일한 방식으로 로컬에서 설치된 npm 패키지를 이름으로 참조할 수 있습니다. 이 규칙은 모든 컨트리뷰터가 동일한 공통의 스크립트 세트를 사용할 수 있도록 하므로 대부분의 npm 기반 프로젝트에서 표준입니다."),(0,t.kt)("p",null,"이제 다음 명령을 실행하고 스크립트의 별칭이 작동하는지 확인하세요."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-bash"},"$ ",(0,t.kt)("span",{parentName:"code",className:"token function"},"npm")," run build\n\n",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},".."),".\n\n",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"webpack-cli",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," Compilation finished\nasset main.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"69.3")," KiB ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"compared ",(0,t.kt)("span",{parentName:"code",className:"token keyword"},"for")," emit",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"minimized",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"("),"name: main",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},")")," ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1")," related asset\nruntime modules ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1000")," bytes ",(0,t.kt)("span",{parentName:"code",className:"token number"},"5")," modules\ncacheable modules ",(0,t.kt)("span",{parentName:"code",className:"token number"},"530")," KiB\n  ./src/index.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"257")," bytes ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"built",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"code generated",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]"),"\n  ./node_modules/lodash/lodash.js ",(0,t.kt)("span",{parentName:"code",className:"token number"},"530")," KiB ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"built",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]")," ",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"["),"code generated",(0,t.kt)("span",{parentName:"code",className:"token punctuation"},"]"),"\nwebpack ",(0,t.kt)("span",{parentName:"code",className:"token number"},"5.4"),".0 compiled successfully ",(0,t.kt)("span",{parentName:"code",className:"token keyword"},"in")," ",(0,t.kt)("span",{parentName:"code",className:"token number"},"1940")," ms")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,t.kt)("p",{parentName:"aside"},"사용자 지정 파라미터는 ",(0,t.kt)("inlineCode",{parentName:"p"},"npm run build")," 명령과 파라미터 사이에 두 개의 대시(예. ",(0,t.kt)("inlineCode",{parentName:"p"},"npm run build -- --color"),")를 추가하여 webpack에 전달할 수 있습니다.")),(0,t.kt)("h2",{id:"conclusion"},"Conclusion",(0,t.kt)("a",{parentName:"h2",href:"#conclusion","aria-hidden":"true",tabIndex:-1},(0,t.kt)("span",{parentName:"a",className:"header-link"}))),(0,t.kt)("p",null,"이제 기본 빌드를 함께 완료하였습니다. 다음 가이드인 ",(0,t.kt)("a",{parentName:"p",href:"/guides/asset-management"},(0,t.kt)("inlineCode",{parentName:"a"},"Asset Management로"))," 이동하여 webpack을 이용한 이미지나 폰트 같은 애셋 관리 방법을 알아보겠습니다. 이 시점에서 프로젝트는 아래와 같아야 합니다."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"project")),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"hljs language-diff"},"webpack-demo\n|- package.json\n|- webpack.config.js\n|- /dist\n",(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- main.js\n"),(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- index.html\n")),"|- /src\n",(0,t.kt)("span",{parentName:"code",className:"token unchanged"},(0,t.kt)("span",{parentName:"span",className:"token prefix unchanged"}," "),(0,t.kt)("span",{parentName:"span",className:"token line"}," |- index.js\n")),"|- /node_modules")),(0,t.kt)("aside",{className:"tip"},(0,t.kt)("h6",{parentName:"aside",className:"tip__prefix"},"tip"),(0,t.kt)("p",{parentName:"aside"},"npm 5+ 이상을 사용하는 경우에는 디렉터리에 ",(0,t.kt)("inlineCode",{parentName:"p"},"package-lock.json")," 파일도 표시될 것입니다.")),(0,t.kt)("aside",{className:"warning"},(0,t.kt)("h6",{parentName:"aside",className:"warning__prefix"},"warning"),(0,t.kt)("p",{parentName:"aside"},"신뢰할 수 없는 코드는 webpack으로 컴파일하지 마세요. 이로 인해 컴퓨터, 원격 서버 또는 애플리케이션 최종 사용자의 웹 브라우저에서 악성 코드가 실행될 수 있습니다.")),(0,t.kt)("p",null,"webpack 디자인에 대해 자세히 알아보고 싶으면 ",(0,t.kt)("a",{parentName:"p",href:"/concepts"},"basic concepts"),"과 ",(0,t.kt)("a",{parentName:"p",href:"/configuration"},"configuration")," 페이지를 확인하세요. 또한 ",(0,t.kt)("a",{parentName:"p",href:"/api"},"API"),"에서 webpack이 제공하는 다양한 인터페이스를 자세히 살펴봅니다."))}k.isMDXComponent=!0}}]);