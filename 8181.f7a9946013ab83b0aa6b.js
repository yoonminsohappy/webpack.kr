(self.webpackChunk=self.webpackChunk||[]).push([[8181],{8181:function(e,n,a){"use strict";a.r(n),n.default='<p>이 플러그인을 사용하면 소스맵 생성을 더욱더 세밀하게 제어 할 수 있습니다. 이 플러그인은 <a href="/configuration/devtool"><code>devtool</code></a>의 설정 옵션을 통해 자동으로 활성화됩니다.</p> <pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>SourceMapDevToolPlugin</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h2 id="options">Options<a href="#options" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>다음과 같은 옵션이 제공됩니다.</p> <ul> <li><code>test</code> (<code>string</code> <code>RegExp</code> <code>[string, RegExp]</code>): 확장자에 따라 소스맵을 포함합니다. (기본값은 <code>.js</code>, <code>.mjs</code> 및 <code>.css</code>).</li> <li><code>include</code> (<code>string</code> <code>RegExp</code> <code>[string, RegExp]</code>): 값과 일치하는 경로의 소스맵을 포함합니다.</li> <li><code>exclude</code> (<code>string</code> <code>RegExp</code> <code>[string, RegExp]</code>): 값과 일치하는 모듈을 소스맵 생성에서 제외합니다.</li> <li><code>filename</code> (<code>string</code>): 소스맵의 파일 이름을 정의합니다 (값이 제공되지 않으면 인라인으로 설정됩니다).</li> <li><code>append</code> (<code>string</code>): 기존 애셋에 값을 추가합니다. 일반적으로 <code>#sourceMappingURL</code> 주석이 사용됩니다. <code>[url]</code>은 소스맵 파일의 URL로 대체됩니다. webpack v4.36.0부터는 <code>[chunk]</code>, <code>[filename]</code> 및 <code>[contenthash]</code>와 같은 경로 파라미터가 지원됩니다. <code>false</code>로 설정하면 값 추가가 비활성화됩니다.</li> <li><code>moduleFilenameTemplate</code> (<code>string</code>): <a href="/configuration/output/#outputdevtoolmodulefilenametemplate"><code>output.devtoolModuleFilenameTemplate</code></a>를 참고하세요.</li> <li><code>fallbackModuleFilenameTemplate</code> (<code>string</code>): 위 링크를 참고하세요.</li> <li><code>namespace</code> (<code>string</code>): <a href="/configuration/output/#outputdevtoolnamespace"><code>output.devtoolNamespace</code></a>를 참고하세요.</li> <li><code>module = true</code> (<code>boolean</code>): 로더가 소스맵을 생성해야 하는지 여부를 나타냅니다.</li> <li><code>columns = true</code> (<code>boolean</code>): 열 매핑을 사용해야 하는지 여부를 나타냅니다.</li> <li><code>noSources = false</code> (<code>boolean</code>): 소스의 내용이 소스맵에 포함되지 않도록 합니다.</li> <li><code>publicPath</code> (<code>string</code>): public path 접두사와 함께 절대 URL을 내보냅니다. (예: <code>https://example.com/project/</code>)</li> <li><code>fileContext</code> (<code>string</code>): 이 디렉터리를 기준으로 <code>[file]</code> 인수를 만듭니다.</li> <li><code>sourceRoot</code> (<code>string</code>): 소스맵의 <code>sourceRoot</code> 프로퍼티에 커스텀 값을 제공합니다.</li> </ul> <p><code>fileContext</code> 옵션은 <code>../../</code>가 절대 <code>[url]</code>에 나타나지 않도록 상위 디렉터리에 소스맵을 저장하려는 경우에 유용합니다.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p><code>module</code> 또는 <code>columns</code>를 <code>false</code>로 설정하면 소스맵의 정확도가 떨어지지만, 컴파일 성능이 크게 향상됩니다.</p></aside> <aside class="tip"><h6 class="tip__prefix">tip</h6><p><a href="/configuration/mode/#mode-development">development mode</a>에서 이 플러그인에 대한 설정을 커스텀 하고 싶다면 기본 설정값을 비활성화해야 합니다. 즉, <code>devtool: false</code>로 설정해야 합니다.</p></aside> <aside class="warning"><h6 class="warning__prefix">warning</h6><p>webpack <code>minimizer</code>의 기본값이 재정의된 경우 (<code>TerserPlugin</code> 옵션 커스텀 등으로 인해), 소스맵 지원을 활성화하려면 <code>sourceMap: true</code>로 설정해야 합니다.</p></aside> <h2 id="examples">Examples<a href="#examples" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>다음은 이 플러그인의 몇 가지 일반적인 사용 사례입니다.</p> <h3 id="basic-use-case">Basic Use Case<a href="#basic-use-case" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>다음 코드를 사용하여 설정 옵션 <code>devtool: inline-source-map</code>을 커스텀 플러그인 설정으로 동등하게 바꿀 수 있습니다.</p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  devtool<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>SourceMapDevToolPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <h3 id="exclude-vendor-maps">Exclude Vendor Maps<a href="#exclude-vendor-maps" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>다음 코드는 <code>vendor.js</code> 번들 내 모듈의 소스맵을 제외합니다.</p> <pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>SourceMapDevToolPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  filename<span class="token operator">:</span> <span class="token string">\'[name].js.map\'</span><span class="token punctuation">,</span>\n  exclude<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'vendor.js\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <h3 id="host-source-maps-externally">Host Source Maps Externally<a href="#host-source-maps-externally" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <p>소스맵의 URL을 설정하세요. 인증이 필요한 호스트에 호스팅하는 데 유용합니다.</p> <pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>SourceMapDevToolPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  append<span class="token operator">:</span> <span class="token string">\'\\n//# sourceMappingURL=https://example.com/sourcemap/[url]\'</span><span class="token punctuation">,</span>\n  filename<span class="token operator">:</span> <span class="token string">\'[name].map\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>소스맵이 상위 디렉터리에 저장되는 경우,</p> <pre><code class="hljs language-code">project\n|- dist\n  |- public\n    |- bundle-[hash].js\n  |- sourcemaps\n    |- bundle-[hash].js.map\n</code></pre> <p>다음과 같이 설정하면</p> <pre><code class="hljs language-js"><span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>SourceMapDevToolPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  filename<span class="token operator">:</span> <span class="token string">\'sourcemaps/[file].map\'</span><span class="token punctuation">,</span>\n  publicPath<span class="token operator">:</span> <span class="token string">\'https://example.com/project/\'</span><span class="token punctuation">,</span>\n  fileContext<span class="token operator">:</span> <span class="token string">\'public\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>다음 URL을 생성합니다.</p> <pre><code class="hljs language-code">https://example.com/project/sourcemaps/bundle-[hash].js.map\n</code></pre> '}}]);