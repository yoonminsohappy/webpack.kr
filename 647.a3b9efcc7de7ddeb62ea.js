(self.webpackChunk=self.webpackChunk||[]).push([[647],{647:function(n,a,s){"use strict";s.r(a),a.default='<p>일반적인 오해를 푸는 것부터 시작하겠습니다. webpack은 <a href="http://browserify.org/">Browserify</a>나 <a href="https://brunch.io/">Brunch</a> 같은 모듈 번들러 입니다. <a href="https://www.gnu.org/software/make/">Make</a> 및 <a href="https://gruntjs.com/">Grunt</a>, <a href="https://gulpjs.com/">Gulp</a>와 같은 태스크 러너가 아닙니다. 태스크 러너는 프로젝트의 린트, 빌드, 테스트와 같은 일반적인 태스크의 자동화를 처리합니다. 번들러와 비교하면 태스크 러너는 더 높은 수준에 집중합니다. 번들링의 문제는 webpack에 맡겨두고 더 높은 수준의 툴링에 대한 이점을 가질 수 있습니다.</p> <p>번들러는 JavaScript와 스타일 시트의 배포를 준비하여 브라우저에 알맞은 형식으로 변환하는 것을 도와줍니다. 예를 들어 JavaScript를 <a href="/plugins/terser-webpack-plugin/">최소화</a>하거나 <a href="/guides/code-splitting">청크로 분리</a>, 또는 <a href="/guides/lazy-loading">지연 로드하여</a> 성능을 향상 시킬 수 있습니다. 번들링은 웹 개발 환경에서 가장 중요한 과제 중 하나이며 프로세스에 많은 부하가 가지 않도록 합니다.</p> <p>좋은 소식은 올바른 방법으로 접근하면 약간 중복이 있더라도 태스크 러너와 번들러를 함께 잘 사용할 수 있습니다. 이 가이드는 널리 사용되는 태스크 러너와 webpack을 어떻게 통합하는지에 대해 이해하기 쉽게 설명합니다.</p> <h2 id="npm-scripts">NPM Scripts<a href="#npm-scripts" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>webpack 사용자는 npm <a href="https://docs.npmjs.com/misc/scripts"><code>scripts</code></a>를 태스크 러너로 종종 사용합니다. 이것은 좋은 시작점입니다. 크로스 플랫폼(Cross-platform) 지원이 문제가 될 수 있지만, 여기엔 여러 가지 해결 방법이 있습니다. 대부분의 사용자는 아니지만 많은 사용자가 간단한 npm <code>scripts</code>와 다양한 수준의 webpack 설정 및 툴링을 사용할 수 있습니다.</p> <p>따라서 webpack의 핵심은 번들링에 초점을 맞추고 있지만, 태스크 러너의 일반적인 작업을 webpack으로 수행할 수 있도록 하는 다양한 확장 기능이 있습니다. 별도의 도구를 통합하면 복잡성이 늘어나기 때문에 시작하기 전에 장단점을 고려해야 합니다.</p> <h2 id="grunt">Grunt<a href="#grunt" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>Grunt를 사용한다면 <a href="https://www.npmjs.com/package/grunt-webpack"><code>grunt-webpack</code></a> 패키지를 사용하는 것이 좋습니다. <code>grunt-webpack</code>을 사용하면 webpack이나 <a href="https://github.com/webpack/webpack-dev-server">webpack-dev-server</a>를 태스크로 실행할 수 있으며, <a href="https://gruntjs.com/api/grunt.template">template tags</a> 내에서 통계에 접근 할 수 있고, 개발과 프로덕션의 설정을 분리하는 등의 작업을 수행할 수 있습니다. 설치하지 않았다면 <code>grunt-webpack</code>과 <code>webpack</code>의 설치를 시작하세요.</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev grunt-webpack webpack</code></pre> <p>그리고 설정을 등록하고 태스크를 로드합니다.</p> <p><strong>Gruntfile.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> webpackConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./webpack.config.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">grunt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  grunt<span class="token punctuation">.</span><span class="token function">initConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    webpack<span class="token operator">:</span> <span class="token punctuation">{</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        stats<span class="token operator">:</span> <span class="token operator">!</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">||</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">\'development\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      prod<span class="token operator">:</span> webpackConfig<span class="token punctuation">,</span>\n      dev<span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> watch<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> webpackConfig<span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  grunt<span class="token punctuation">.</span><span class="token function">loadNpmTasks</span><span class="token punctuation">(</span><span class="token string">\'grunt-webpack\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>자세한 내용은 <a href="https://github.com/webpack-contrib/grunt-webpack">grunt-webpack 저장소</a>를 참고하세요.</p> <h2 id="gulp">Gulp<a href="#gulp" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>Gulp 역시 <a href="https://github.com/shama/webpack-stream"><code>webpack-stream</code></a> 패키지를 통해 매우 간단하게 통합할 수 있습니다. (a.k.a. <code>gulp-webpack</code>) 이 경우 <code>webpack</code>은 <code>webpack-stream</code>에 직접적인 의존성이 있으므로 별도로 설치할 필요가 없습니다.</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack-stream</code></pre> <p><code>webpack</code> 대신 <code>require(\'webpack-stream\')</code>을 사용하고 선택적으로 설정을 전달합니다.</p> <p><strong>gulpfile.js</strong></p> <pre><code class="hljs language-js"><span class="token keyword">const</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'gulp\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'webpack-stream\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ngulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">\'default\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> gulp\n    <span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">\'src/entry.js\'</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>\n      <span class="token function">webpack</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token comment">// 모든 설정 옵션...</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">\'dist/\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre> <p>자세한 내용은 <a href="https://github.com/shama/webpack-stream">webpack-stem 저장소</a>를 참고하세요.</p> <h2 id="mocha">Mocha<a href="#mocha" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/zinserjan/mocha-webpack"><code>mocha-webpack</code></a> 유틸리티는 webpack을 Mocha와 깔끔하게 통합해줍니다. 저장소는 장단점에 대한 자세한 내용을 제공하지만 본질적으로 <code>mocha-webpack</code>은 Mocha 자체와 거의 동일한 CLI를 제공하고 향상된 watch 모드와 경로 분석과 같은 다양한 webpack 기능을 제공하는 간단한 래퍼입니다. 다음은 설치 및 테스트 스위트를 실행하는 방법에 대한 간단한 예입니다. (<code>./test</code>에 있음).</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack mocha mocha-webpack\nmocha-webpack <span class="token string">\'test/**/*.js\'</span></code></pre> <p>자세한 내용은 <a href="https://github.com/zinserjan/mocha-webpack">mocha-webpack 저장소</a>를 참고하세요.</p> <h2 id="karma">Karma<a href="#karma" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p><a href="https://github.com/webpack-contrib/karma-webpack"><code>karma-webpack</code></a> 패키지를 사용하면 webpack을 사용하여 <a href="https://karma-runner.github.io/1.0/index.html">Karma</a>에서 파일을 전처리할 수 있습니다.</p> <pre><code class="hljs language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev webpack karma karma-webpack</code></pre> <p><strong>karma.conf.js</strong></p> <pre><code class="hljs language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  config<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    frameworks<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'webpack\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    files<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span> pattern<span class="token operator">:</span> <span class="token string">\'test/*_test.js\'</span><span class="token punctuation">,</span> watched<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span> pattern<span class="token operator">:</span> <span class="token string">\'test/**/*_test.js\'</span><span class="token punctuation">,</span> watched<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    preprocessors<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string">\'test/*_test.js\'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'webpack\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string">\'test/**/*_test.js\'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'webpack\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    webpack<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 모든 커스텀 webpack 설정...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'karma-webpack\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>자세한 내용은 <a href="https://github.com/webpack-contrib/karma-webpack">karma-webpack 저장소</a>를 참고하세요.</p> '}}]);